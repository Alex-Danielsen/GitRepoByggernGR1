
ByggernGR1_Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ee  00800200  00001648  000016dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001648  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  008002ee  008002ee  000017ca  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000017ca  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000258  00000000  00000000  00001826  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001b10  00000000  00000000  00001a7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000de0  00000000  00000000  0000358e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000131e  00000000  00000000  0000436e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004e8  00000000  00000000  0000568c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000686  00000000  00000000  00005b74  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b3d  00000000  00000000  000061fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001a8  00000000  00000000  00006d37  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	dc c0       	rjmp	.+440    	; 0x1c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	8e c1       	rjmp	.+796    	; 0x332 <__vector_5>
      16:	00 00       	nop
      18:	d6 c0       	rjmp	.+428    	; 0x1c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	51 c3       	rjmp	.+1698   	; 0x740 <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	bb 03       	fmulsu	r19, r19
      e6:	0d 04       	cpc	r0, r13
      e8:	0d 04       	cpc	r0, r13
      ea:	0d 04       	cpc	r0, r13
      ec:	0d 04       	cpc	r0, r13
      ee:	0d 04       	cpc	r0, r13
      f0:	0d 04       	cpc	r0, r13
      f2:	0d 04       	cpc	r0, r13
      f4:	bb 03       	fmulsu	r19, r19
      f6:	0d 04       	cpc	r0, r13
      f8:	0d 04       	cpc	r0, r13
      fa:	0d 04       	cpc	r0, r13
      fc:	0d 04       	cpc	r0, r13
      fe:	0d 04       	cpc	r0, r13
     100:	0d 04       	cpc	r0, r13
     102:	0d 04       	cpc	r0, r13
     104:	bd 03       	fmulsu	r19, r21
     106:	0d 04       	cpc	r0, r13
     108:	0d 04       	cpc	r0, r13
     10a:	0d 04       	cpc	r0, r13
     10c:	0d 04       	cpc	r0, r13
     10e:	0d 04       	cpc	r0, r13
     110:	0d 04       	cpc	r0, r13
     112:	0d 04       	cpc	r0, r13
     114:	0d 04       	cpc	r0, r13
     116:	0d 04       	cpc	r0, r13
     118:	0d 04       	cpc	r0, r13
     11a:	0d 04       	cpc	r0, r13
     11c:	0d 04       	cpc	r0, r13
     11e:	0d 04       	cpc	r0, r13
     120:	0d 04       	cpc	r0, r13
     122:	0d 04       	cpc	r0, r13
     124:	bd 03       	fmulsu	r19, r21
     126:	0d 04       	cpc	r0, r13
     128:	0d 04       	cpc	r0, r13
     12a:	0d 04       	cpc	r0, r13
     12c:	0d 04       	cpc	r0, r13
     12e:	0d 04       	cpc	r0, r13
     130:	0d 04       	cpc	r0, r13
     132:	0d 04       	cpc	r0, r13
     134:	0d 04       	cpc	r0, r13
     136:	0d 04       	cpc	r0, r13
     138:	0d 04       	cpc	r0, r13
     13a:	0d 04       	cpc	r0, r13
     13c:	0d 04       	cpc	r0, r13
     13e:	0d 04       	cpc	r0, r13
     140:	0d 04       	cpc	r0, r13
     142:	0d 04       	cpc	r0, r13
     144:	09 04       	cpc	r0, r9
     146:	0d 04       	cpc	r0, r13
     148:	0d 04       	cpc	r0, r13
     14a:	0d 04       	cpc	r0, r13
     14c:	0d 04       	cpc	r0, r13
     14e:	0d 04       	cpc	r0, r13
     150:	0d 04       	cpc	r0, r13
     152:	0d 04       	cpc	r0, r13
     154:	e6 03       	fmuls	r22, r22
     156:	0d 04       	cpc	r0, r13
     158:	0d 04       	cpc	r0, r13
     15a:	0d 04       	cpc	r0, r13
     15c:	0d 04       	cpc	r0, r13
     15e:	0d 04       	cpc	r0, r13
     160:	0d 04       	cpc	r0, r13
     162:	0d 04       	cpc	r0, r13
     164:	0d 04       	cpc	r0, r13
     166:	0d 04       	cpc	r0, r13
     168:	0d 04       	cpc	r0, r13
     16a:	0d 04       	cpc	r0, r13
     16c:	0d 04       	cpc	r0, r13
     16e:	0d 04       	cpc	r0, r13
     170:	0d 04       	cpc	r0, r13
     172:	0d 04       	cpc	r0, r13
     174:	da 03       	fmulsu	r21, r18
     176:	0d 04       	cpc	r0, r13
     178:	0d 04       	cpc	r0, r13
     17a:	0d 04       	cpc	r0, r13
     17c:	0d 04       	cpc	r0, r13
     17e:	0d 04       	cpc	r0, r13
     180:	0d 04       	cpc	r0, r13
     182:	0d 04       	cpc	r0, r13
     184:	f8 03       	fmulsu	r23, r16

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	e8 e4       	ldi	r30, 0x48	; 72
     19e:	f6 e1       	ldi	r31, 0x16	; 22
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	ae 3e       	cpi	r26, 0xEE	; 238
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	ae ee       	ldi	r26, 0xEE	; 238
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	af 3f       	cpi	r26, 0xFF	; 255
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	0b d1       	rcall	.+534    	; 0x3d8 <main>
     1c2:	0c 94 22 0b 	jmp	0x1644	; 0x1644 <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <adc_init>:
     1c8:	ea e7       	ldi	r30, 0x7A	; 122
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	80 81       	ld	r24, Z
     1ce:	81 60       	ori	r24, 0x01	; 1
     1d0:	80 83       	st	Z, r24
     1d2:	80 81       	ld	r24, Z
     1d4:	82 60       	ori	r24, 0x02	; 2
     1d6:	80 83       	st	Z, r24
     1d8:	80 81       	ld	r24, Z
     1da:	84 60       	ori	r24, 0x04	; 4
     1dc:	80 83       	st	Z, r24
     1de:	ac e7       	ldi	r26, 0x7C	; 124
     1e0:	b0 e0       	ldi	r27, 0x00	; 0
     1e2:	8c 91       	ld	r24, X
     1e4:	80 64       	ori	r24, 0x40	; 64
     1e6:	8c 93       	st	X, r24
     1e8:	80 81       	ld	r24, Z
     1ea:	80 68       	ori	r24, 0x80	; 128
     1ec:	80 83       	st	Z, r24
     1ee:	08 95       	ret

000001f0 <adc_read>:
     1f0:	ea e7       	ldi	r30, 0x7A	; 122
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	80 81       	ld	r24, Z
     1f6:	80 64       	ori	r24, 0x40	; 64
     1f8:	80 83       	st	Z, r24
     1fa:	80 81       	ld	r24, Z
     1fc:	84 fd       	sbrc	r24, 4
     1fe:	06 c0       	rjmp	.+12     	; 0x20c <adc_read+0x1c>
     200:	80 91 78 00 	lds	r24, 0x0078
     204:	90 91 79 00 	lds	r25, 0x0079
     208:	93 70       	andi	r25, 0x03	; 3
     20a:	08 95       	ret
     20c:	08 95       	ret

0000020e <can_init>:
     20e:	cf 93       	push	r28
     210:	df 93       	push	r29
     212:	1f 92       	push	r1
     214:	cd b7       	in	r28, 0x3d	; 61
     216:	de b7       	in	r29, 0x3e	; 62
     218:	69 d1       	rcall	.+722    	; 0x4ec <mcp_init>
     21a:	8e e0       	ldi	r24, 0x0E	; 14
     21c:	3b d1       	rcall	.+630    	; 0x494 <mcp_read>
     21e:	89 83       	std	Y+1, r24	; 0x01
     220:	44 e0       	ldi	r20, 0x04	; 4
     222:	60 e0       	ldi	r22, 0x00	; 0
     224:	80 e6       	ldi	r24, 0x60	; 96
     226:	43 d1       	rcall	.+646    	; 0x4ae <mcp_bitModify>
     228:	4f ef       	ldi	r20, 0xFF	; 255
     22a:	61 e0       	ldi	r22, 0x01	; 1
     22c:	8b e2       	ldi	r24, 0x2B	; 43
     22e:	3f d1       	rcall	.+638    	; 0x4ae <mcp_bitModify>
     230:	40 e0       	ldi	r20, 0x00	; 0
     232:	60 ee       	ldi	r22, 0xE0	; 224
     234:	8f e0       	ldi	r24, 0x0F	; 15
     236:	3b d1       	rcall	.+630    	; 0x4ae <mcp_bitModify>
     238:	8e e0       	ldi	r24, 0x0E	; 14
     23a:	2c d1       	rcall	.+600    	; 0x494 <mcp_read>
     23c:	89 83       	std	Y+1, r24	; 0x01
     23e:	89 81       	ldd	r24, Y+1	; 0x01
     240:	80 7e       	andi	r24, 0xE0	; 224
     242:	80 34       	cpi	r24, 0x40	; 64
     244:	41 f0       	breq	.+16     	; 0x256 <can_init+0x48>
     246:	80 38       	cpi	r24, 0x80	; 128
     248:	51 f0       	breq	.+20     	; 0x25e <can_init+0x50>
     24a:	81 11       	cpse	r24, r1
     24c:	0b c0       	rjmp	.+22     	; 0x264 <can_init+0x56>
     24e:	87 e0       	ldi	r24, 0x07	; 7
     250:	92 e0       	ldi	r25, 0x02	; 2
     252:	ef d5       	rcall	.+3038   	; 0xe32 <puts>
     254:	07 c0       	rjmp	.+14     	; 0x264 <can_init+0x56>
     256:	8f e1       	ldi	r24, 0x1F	; 31
     258:	92 e0       	ldi	r25, 0x02	; 2
     25a:	eb d5       	rcall	.+3030   	; 0xe32 <puts>
     25c:	03 c0       	rjmp	.+6      	; 0x264 <can_init+0x56>
     25e:	89 e3       	ldi	r24, 0x39	; 57
     260:	92 e0       	ldi	r25, 0x02	; 2
     262:	e7 d5       	rcall	.+3022   	; 0xe32 <puts>
     264:	0f 90       	pop	r0
     266:	df 91       	pop	r29
     268:	cf 91       	pop	r28
     26a:	08 95       	ret

0000026c <can_recieve>:
     26c:	9f 92       	push	r9
     26e:	af 92       	push	r10
     270:	bf 92       	push	r11
     272:	cf 92       	push	r12
     274:	df 92       	push	r13
     276:	ef 92       	push	r14
     278:	ff 92       	push	r15
     27a:	0f 93       	push	r16
     27c:	1f 93       	push	r17
     27e:	cf 93       	push	r28
     280:	df 93       	push	r29
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	2c 97       	sbiw	r28, 0x0c	; 12
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	de bf       	out	0x3e, r29	; 62
     28e:	0f be       	out	0x3f, r0	; 63
     290:	cd bf       	out	0x3d, r28	; 61
     292:	7c 01       	movw	r14, r24
     294:	8c e2       	ldi	r24, 0x2C	; 44
     296:	fe d0       	rcall	.+508    	; 0x494 <mcp_read>
     298:	8c 87       	std	Y+12, r24	; 0x0c
     29a:	8e e0       	ldi	r24, 0x0E	; 14
     29c:	fb d0       	rcall	.+502    	; 0x494 <mcp_read>
     29e:	8c 70       	andi	r24, 0x0C	; 12
     2a0:	19 f1       	breq	.+70     	; 0x2e8 <can_recieve+0x7c>
     2a2:	81 e6       	ldi	r24, 0x61	; 97
     2a4:	f7 d0       	rcall	.+494    	; 0x494 <mcp_read>
     2a6:	c8 2e       	mov	r12, r24
     2a8:	82 e6       	ldi	r24, 0x62	; 98
     2aa:	f4 d0       	rcall	.+488    	; 0x494 <mcp_read>
     2ac:	d1 2c       	mov	r13, r1
     2ae:	dc 2c       	mov	r13, r12
     2b0:	cc 24       	eor	r12, r12
     2b2:	c8 2a       	or	r12, r24
     2b4:	85 e6       	ldi	r24, 0x65	; 101
     2b6:	ee d0       	rcall	.+476    	; 0x494 <mcp_read>
     2b8:	8f 70       	andi	r24, 0x0F	; 15
     2ba:	98 2e       	mov	r9, r24
     2bc:	c1 f0       	breq	.+48     	; 0x2ee <can_recieve+0x82>
     2be:	8e 01       	movw	r16, r28
     2c0:	0c 5f       	subi	r16, 0xFC	; 252
     2c2:	1f 4f       	sbci	r17, 0xFF	; 255
     2c4:	0f 2e       	mov	r0, r31
     2c6:	f6 e6       	ldi	r31, 0x66	; 102
     2c8:	af 2e       	mov	r10, r31
     2ca:	f0 2d       	mov	r31, r0
     2cc:	a8 0e       	add	r10, r24
     2ce:	0f 2e       	mov	r0, r31
     2d0:	f6 e6       	ldi	r31, 0x66	; 102
     2d2:	bf 2e       	mov	r11, r31
     2d4:	f0 2d       	mov	r31, r0
     2d6:	8b 2d       	mov	r24, r11
     2d8:	dd d0       	rcall	.+442    	; 0x494 <mcp_read>
     2da:	f8 01       	movw	r30, r16
     2dc:	81 93       	st	Z+, r24
     2de:	8f 01       	movw	r16, r30
     2e0:	b3 94       	inc	r11
     2e2:	ba 10       	cpse	r11, r10
     2e4:	f8 cf       	rjmp	.-16     	; 0x2d6 <can_recieve+0x6a>
     2e6:	03 c0       	rjmp	.+6      	; 0x2ee <can_recieve+0x82>
     2e8:	81 e5       	ldi	r24, 0x51	; 81
     2ea:	92 e0       	ldi	r25, 0x02	; 2
     2ec:	a2 d5       	rcall	.+2884   	; 0xe32 <puts>
     2ee:	40 e0       	ldi	r20, 0x00	; 0
     2f0:	61 e0       	ldi	r22, 0x01	; 1
     2f2:	8c e2       	ldi	r24, 0x2C	; 44
     2f4:	dc d0       	rcall	.+440    	; 0x4ae <mcp_bitModify>
     2f6:	da 82       	std	Y+2, r13	; 0x02
     2f8:	c9 82       	std	Y+1, r12	; 0x01
     2fa:	9b 82       	std	Y+3, r9	; 0x03
     2fc:	8b e0       	ldi	r24, 0x0B	; 11
     2fe:	fe 01       	movw	r30, r28
     300:	31 96       	adiw	r30, 0x01	; 1
     302:	d7 01       	movw	r26, r14
     304:	01 90       	ld	r0, Z+
     306:	0d 92       	st	X+, r0
     308:	8a 95       	dec	r24
     30a:	e1 f7       	brne	.-8      	; 0x304 <can_recieve+0x98>
     30c:	c7 01       	movw	r24, r14
     30e:	2c 96       	adiw	r28, 0x0c	; 12
     310:	0f b6       	in	r0, 0x3f	; 63
     312:	f8 94       	cli
     314:	de bf       	out	0x3e, r29	; 62
     316:	0f be       	out	0x3f, r0	; 63
     318:	cd bf       	out	0x3d, r28	; 61
     31a:	df 91       	pop	r29
     31c:	cf 91       	pop	r28
     31e:	1f 91       	pop	r17
     320:	0f 91       	pop	r16
     322:	ff 90       	pop	r15
     324:	ef 90       	pop	r14
     326:	df 90       	pop	r13
     328:	cf 90       	pop	r12
     32a:	bf 90       	pop	r11
     32c:	af 90       	pop	r10
     32e:	9f 90       	pop	r9
     330:	08 95       	ret

00000332 <__vector_5>:
#define F_CPU 16000000
#define BAUD 9600
#define BAUDRATE F_CPU/16/BAUD-1

//Interrupt service routine for MCP
ISR(INT4_vect){
     332:	1f 92       	push	r1
     334:	0f 92       	push	r0
     336:	0f b6       	in	r0, 0x3f	; 63
     338:	0f 92       	push	r0
     33a:	11 24       	eor	r1, r1
     33c:	0b b6       	in	r0, 0x3b	; 59
     33e:	0f 92       	push	r0
     340:	2f 93       	push	r18
     342:	3f 93       	push	r19
     344:	4f 93       	push	r20
     346:	5f 93       	push	r21
     348:	6f 93       	push	r22
     34a:	7f 93       	push	r23
     34c:	8f 93       	push	r24
     34e:	9f 93       	push	r25
     350:	af 93       	push	r26
     352:	bf 93       	push	r27
     354:	ef 93       	push	r30
     356:	ff 93       	push	r31
     358:	cf 93       	push	r28
     35a:	df 93       	push	r29
     35c:	cd b7       	in	r28, 0x3d	; 61
     35e:	de b7       	in	r29, 0x3e	; 62
     360:	2b 97       	sbiw	r28, 0x0b	; 11
     362:	de bf       	out	0x3e, r29	; 62
     364:	cd bf       	out	0x3d, r28	; 61
	printf("\nInterrupt occurred...");
     366:	80 e6       	ldi	r24, 0x60	; 96
     368:	92 e0       	ldi	r25, 0x02	; 2
     36a:	9f 93       	push	r25
     36c:	8f 93       	push	r24
     36e:	50 d5       	rcall	.+2720   	; 0xe10 <printf>
	volatile can_message recMessage = can_recieve();
     370:	ce 01       	movw	r24, r28
     372:	01 96       	adiw	r24, 0x01	; 1
     374:	7b df       	rcall	.-266    	; 0x26c <can_recieve>
	printf("X: %d\n Y: %d \n",(recMessage.data[0]), (recMessage.data[1]));
     376:	9d 81       	ldd	r25, Y+5	; 0x05
     378:	8c 81       	ldd	r24, Y+4	; 0x04
     37a:	1f 92       	push	r1
     37c:	9f 93       	push	r25
     37e:	1f 92       	push	r1
     380:	8f 93       	push	r24
     382:	87 e7       	ldi	r24, 0x77	; 119
     384:	92 e0       	ldi	r25, 0x02	; 2
     386:	9f 93       	push	r25
     388:	8f 93       	push	r24
     38a:	42 d5       	rcall	.+2692   	; 0xe10 <printf>
	servo_set(utilities_joyToServo(recMessage.data[0]));
     38c:	8c 81       	ldd	r24, Y+4	; 0x04
     38e:	80 d2       	rcall	.+1280   	; 0x890 <utilities_joyToServo>
     390:	62 d1       	rcall	.+708    	; 0x656 <servo_set>
	motor_joyControl(utilities_joyToMotor(recMessage.data[1]));
     392:	8d 81       	ldd	r24, Y+5	; 0x05
     394:	94 d2       	rcall	.+1320   	; 0x8be <utilities_joyToMotor>
     396:	27 d1       	rcall	.+590    	; 0x5e6 <motor_joyControl>
     398:	0f b6       	in	r0, 0x3f	; 63
     39a:	f8 94       	cli
     39c:	de bf       	out	0x3e, r29	; 62
     39e:	0f be       	out	0x3f, r0	; 63
     3a0:	cd bf       	out	0x3d, r28	; 61
}
     3a2:	2b 96       	adiw	r28, 0x0b	; 11
     3a4:	0f b6       	in	r0, 0x3f	; 63
     3a6:	f8 94       	cli
     3a8:	de bf       	out	0x3e, r29	; 62
     3aa:	0f be       	out	0x3f, r0	; 63
     3ac:	cd bf       	out	0x3d, r28	; 61
     3ae:	df 91       	pop	r29
     3b0:	cf 91       	pop	r28
     3b2:	ff 91       	pop	r31
     3b4:	ef 91       	pop	r30
     3b6:	bf 91       	pop	r27
     3b8:	af 91       	pop	r26
     3ba:	9f 91       	pop	r25
     3bc:	8f 91       	pop	r24
     3be:	7f 91       	pop	r23
     3c0:	6f 91       	pop	r22
     3c2:	5f 91       	pop	r21
     3c4:	4f 91       	pop	r20
     3c6:	3f 91       	pop	r19
     3c8:	2f 91       	pop	r18
     3ca:	0f 90       	pop	r0
     3cc:	0b be       	out	0x3b, r0	; 59
     3ce:	0f 90       	pop	r0
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	0f 90       	pop	r0
     3d4:	1f 90       	pop	r1
     3d6:	18 95       	reti

000003d8 <main>:
 
int main(void){	
     3d8:	cf 93       	push	r28
     3da:	df 93       	push	r29
     3dc:	cd b7       	in	r28, 0x3d	; 61
     3de:	de b7       	in	r29, 0x3e	; 62
     3e0:	66 97       	sbiw	r28, 0x16	; 22
     3e2:	0f b6       	in	r0, 0x3f	; 63
     3e4:	f8 94       	cli
     3e6:	de bf       	out	0x3e, r29	; 62
     3e8:	0f be       	out	0x3f, r0	; 63
     3ea:	cd bf       	out	0x3d, r28	; 61
	UART_init(BAUDRATE);
     3ec:	87 e6       	ldi	r24, 0x67	; 103
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	3a d2       	rcall	.+1140   	; 0x866 <UART_init>
	UART_parsePrint();
     3f2:	48 d2       	rcall	.+1168   	; 0x884 <UART_parsePrint>
	can_init();
     3f4:	0c df       	rcall	.-488    	; 0x20e <can_init>
	servo_init();
     3f6:	11 d1       	rcall	.+546    	; 0x61a <servo_init>
	adc_init();
     3f8:	e7 de       	rcall	.-562    	; 0x1c8 <adc_init>
	motor_init();
     3fa:	8f d0       	rcall	.+286    	; 0x51a <motor_init>
	solenoid_init();
     3fc:	47 d1       	rcall	.+654    	; 0x68c <solenoid_init>
	
	
	/*  BEGIN INITIALIZATION OF INTERRUPTS */
	//Set to falling edge
	EICRB |= (1 << ISC41);
     3fe:	ea e6       	ldi	r30, 0x6A	; 106
     400:	f0 e0       	ldi	r31, 0x00	; 0
     402:	80 81       	ld	r24, Z
     404:	82 60       	ori	r24, 0x02	; 2
     406:	80 83       	st	Z, r24
	//Set mask
	EIMSK |= (1 << INT4);
     408:	ec 9a       	sbi	0x1d, 4	; 29
	//Enable interrupts - disable with cli()
	sei();
     40a:	78 94       	sei
	/*  END INITIALIZATION OF INTERRUPTS */
	 printf("Init Complete");
     40c:	86 e8       	ldi	r24, 0x86	; 134
     40e:	92 e0       	ldi	r25, 0x02	; 2
     410:	9f 93       	push	r25
     412:	8f 93       	push	r24
     414:	fd d4       	rcall	.+2554   	; 0xe10 <printf>
	
	//motor_calibrate();
	
	
	//BEGIN CAN TEST:
	volatile can_message newMessage = {
     416:	fe 01       	movw	r30, r28
     418:	31 96       	adiw	r30, 0x01	; 1
     41a:	8b e0       	ldi	r24, 0x0B	; 11
     41c:	df 01       	movw	r26, r30
     41e:	1d 92       	st	X+, r1
     420:	8a 95       	dec	r24
     422:	e9 f7       	brne	.-6      	; 0x41e <main+0x46>
     424:	81 e0       	ldi	r24, 0x01	; 1
     426:	8b 83       	std	Y+3, r24	; 0x03
     428:	8a e1       	ldi	r24, 0x1A	; 26
     42a:	8c 83       	std	Y+4, r24	; 0x04
     42c:	8b e0       	ldi	r24, 0x0B	; 11
     42e:	de 01       	movw	r26, r28
     430:	1c 96       	adiw	r26, 0x0c	; 12
     432:	01 90       	ld	r0, Z+
     434:	0d 92       	st	X+, r0
     436:	8a 95       	dec	r24
     438:	e1 f7       	brne	.-8      	; 0x432 <main+0x5a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     43a:	87 ea       	ldi	r24, 0xA7	; 167
     43c:	91 e6       	ldi	r25, 0x61	; 97
     43e:	01 97       	sbiw	r24, 0x01	; 1
     440:	f1 f7       	brne	.-4      	; 0x43e <main+0x66>
     442:	00 c0       	rjmp	.+0      	; 0x444 <main+0x6c>
     444:	00 00       	nop
	//can_send(&newMessage);
	_delay_ms(100);
	
	//END CAN TEST.
	
	motor_setDir(LEFT);
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	a7 d0       	rcall	.+334    	; 0x598 <motor_setDir>
	motor_setSpeed(0);
     44a:	80 e0       	ldi	r24, 0x00	; 0
     44c:	b6 d0       	rcall	.+364    	; 0x5ba <motor_setSpeed>
	solenoid_hit();
     44e:	27 d1       	rcall	.+590    	; 0x69e <solenoid_hit>
     450:	0f 90       	pop	r0
     452:	0f 90       	pop	r0
		//printf("\nEncoder value: %d\n", motor_getEncoder());
		//
		//motor_setDir(RIGHT);
		//motor_setSpeed(100);
		//_delay_ms(2500);
		printf("\nIR value: %d\n", adc_read());
     454:	0f 2e       	mov	r0, r31
     456:	f4 e9       	ldi	r31, 0x94	; 148
     458:	ef 2e       	mov	r14, r31
     45a:	f2 e0       	ldi	r31, 0x02	; 2
     45c:	ff 2e       	mov	r15, r31
     45e:	f0 2d       	mov	r31, r0
		printf("\nEncoder value: %d\n", motor_getEncoder());
     460:	03 ea       	ldi	r16, 0xA3	; 163
     462:	12 e0       	ldi	r17, 0x02	; 2
		//printf("\nEncoder value: %d\n", motor_getEncoder());
		//
		//motor_setDir(RIGHT);
		//motor_setSpeed(100);
		//_delay_ms(2500);
		printf("\nIR value: %d\n", adc_read());
     464:	c5 de       	rcall	.-630    	; 0x1f0 <adc_read>
     466:	9f 93       	push	r25
     468:	8f 93       	push	r24
     46a:	ff 92       	push	r15
     46c:	ef 92       	push	r14
     46e:	d0 d4       	rcall	.+2464   	; 0xe10 <printf>
		printf("\nEncoder value: %d\n", motor_getEncoder());
     470:	6d d0       	rcall	.+218    	; 0x54c <motor_getEncoder>
     472:	9f 93       	push	r25
     474:	8f 93       	push	r24
     476:	1f 93       	push	r17
     478:	0f 93       	push	r16
     47a:	ca d4       	rcall	.+2452   	; 0xe10 <printf>
     47c:	a7 ea       	ldi	r26, 0xA7	; 167
     47e:	b1 e6       	ldi	r27, 0x61	; 97
     480:	11 97       	sbiw	r26, 0x01	; 1
     482:	f1 f7       	brne	.-4      	; 0x480 <main+0xa8>
     484:	00 c0       	rjmp	.+0      	; 0x486 <main+0xae>
     486:	00 00       	nop
     488:	0f b6       	in	r0, 0x3f	; 63
     48a:	f8 94       	cli
     48c:	de bf       	out	0x3e, r29	; 62
     48e:	0f be       	out	0x3f, r0	; 63
     490:	cd bf       	out	0x3d, r28	; 61
     492:	e8 cf       	rjmp	.-48     	; 0x464 <main+0x8c>

00000494 <mcp_read>:
     494:	cf 93       	push	r28
     496:	c8 2f       	mov	r28, r24
     498:	2f 98       	cbi	0x05, 7	; 5
     49a:	83 e0       	ldi	r24, 0x03	; 3
     49c:	1a d1       	rcall	.+564    	; 0x6d2 <spi_transmit>
     49e:	8c 2f       	mov	r24, r28
     4a0:	18 d1       	rcall	.+560    	; 0x6d2 <spi_transmit>
     4a2:	80 e0       	ldi	r24, 0x00	; 0
     4a4:	16 d1       	rcall	.+556    	; 0x6d2 <spi_transmit>
     4a6:	2f 9a       	sbi	0x05, 7	; 5
     4a8:	19 d1       	rcall	.+562    	; 0x6dc <spi_read>
     4aa:	cf 91       	pop	r28
     4ac:	08 95       	ret

000004ae <mcp_bitModify>:
     4ae:	1f 93       	push	r17
     4b0:	cf 93       	push	r28
     4b2:	df 93       	push	r29
     4b4:	18 2f       	mov	r17, r24
     4b6:	d6 2f       	mov	r29, r22
     4b8:	c4 2f       	mov	r28, r20
     4ba:	2f 98       	cbi	0x05, 7	; 5
     4bc:	85 e0       	ldi	r24, 0x05	; 5
     4be:	09 d1       	rcall	.+530    	; 0x6d2 <spi_transmit>
     4c0:	81 2f       	mov	r24, r17
     4c2:	07 d1       	rcall	.+526    	; 0x6d2 <spi_transmit>
     4c4:	8d 2f       	mov	r24, r29
     4c6:	05 d1       	rcall	.+522    	; 0x6d2 <spi_transmit>
     4c8:	8c 2f       	mov	r24, r28
     4ca:	03 d1       	rcall	.+518    	; 0x6d2 <spi_transmit>
     4cc:	2f 9a       	sbi	0x05, 7	; 5
     4ce:	df 91       	pop	r29
     4d0:	cf 91       	pop	r28
     4d2:	1f 91       	pop	r17
     4d4:	08 95       	ret

000004d6 <mcp_reset>:
     4d6:	2f 98       	cbi	0x05, 7	; 5
     4d8:	80 ec       	ldi	r24, 0xC0	; 192
     4da:	fb d0       	rcall	.+502    	; 0x6d2 <spi_transmit>
     4dc:	83 ec       	ldi	r24, 0xC3	; 195
     4de:	99 e0       	ldi	r25, 0x09	; 9
     4e0:	01 97       	sbiw	r24, 0x01	; 1
     4e2:	f1 f7       	brne	.-4      	; 0x4e0 <mcp_reset+0xa>
     4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <mcp_reset+0x10>
     4e6:	00 00       	nop
     4e8:	2f 9a       	sbi	0x05, 7	; 5
     4ea:	08 95       	ret

000004ec <mcp_init>:
     4ec:	27 9a       	sbi	0x04, 7	; 4
     4ee:	2f 9a       	sbi	0x05, 7	; 5
     4f0:	df d0       	rcall	.+446    	; 0x6b0 <spi_init>
     4f2:	f1 cf       	rjmp	.-30     	; 0x4d6 <mcp_reset>
     4f4:	08 95       	ret

000004f6 <motor_reset>:
}


void motor_reset(){
	//Clear PINH5 bit in PORTH register to set RST signal thus resetting the motor:
	PORTH &= ~(1 << PINH6);
     4f6:	e2 e0       	ldi	r30, 0x02	; 2
     4f8:	f1 e0       	ldi	r31, 0x01	; 1
     4fa:	80 81       	ld	r24, Z
     4fc:	8f 7b       	andi	r24, 0xBF	; 191
     4fe:	80 83       	st	Z, r24
     500:	89 e6       	ldi	r24, 0x69	; 105
     502:	98 e1       	ldi	r25, 0x18	; 24
     504:	01 97       	sbiw	r24, 0x01	; 1
     506:	f1 f7       	brne	.-4      	; 0x504 <motor_reset+0xe>
     508:	00 c0       	rjmp	.+0      	; 0x50a <motor_reset+0x14>
     50a:	00 00       	nop
	_delay_ms(25); //Wait for motor to reset.
	//Set PINH5 bit in PORTH reg to clear RST signal.
	PORTH |= (1 << PINH6);
     50c:	80 81       	ld	r24, Z
     50e:	80 64       	ori	r24, 0x40	; 64
     510:	80 83       	st	Z, r24
	printf("Encoder Reset\n");
     512:	87 eb       	ldi	r24, 0xB7	; 183
     514:	92 e0       	ldi	r25, 0x02	; 2
     516:	8d c4       	rjmp	.+2330   	; 0xe32 <puts>
     518:	08 95       	ret

0000051a <motor_init>:

#include "TWI_master.h"
#include "motor.h"

void motor_init(){
	TWI_Master_Initialise();
     51a:	e2 d0       	rcall	.+452    	; 0x6e0 <TWI_Master_Initialise>
	//Set DDHx bits in data direction register DDRH to set pin x on PORTH as output:
	DDRH |= (1 << DDH1);	//DIR pin
     51c:	e1 e0       	ldi	r30, 0x01	; 1
     51e:	f1 e0       	ldi	r31, 0x01	; 1
     520:	80 81       	ld	r24, Z
     522:	82 60       	ori	r24, 0x02	; 2
     524:	80 83       	st	Z, r24
	DDRH |= (1 << DDH3);	//SEL pin
     526:	80 81       	ld	r24, Z
     528:	88 60       	ori	r24, 0x08	; 8
     52a:	80 83       	st	Z, r24
	DDRH |= (1 << DDH4);	//EN pin
     52c:	80 81       	ld	r24, Z
     52e:	80 61       	ori	r24, 0x10	; 16
     530:	80 83       	st	Z, r24
	DDRH |= (1 << DDH5);	//!0E pin
     532:	80 81       	ld	r24, Z
     534:	80 62       	ori	r24, 0x20	; 32
     536:	80 83       	st	Z, r24
	DDRH |= (1 << DDH6);	//RST pin
     538:	80 81       	ld	r24, Z
     53a:	80 64       	ori	r24, 0x40	; 64
     53c:	80 83       	st	Z, r24
	
	
	//Set PINH4 bit in PORTH register to enable motor (PINH4 = EN pin):
	PORTH |= (1 << PINH4);
     53e:	e2 e0       	ldi	r30, 0x02	; 2
     540:	f1 e0       	ldi	r31, 0x01	; 1
     542:	80 81       	ld	r24, Z
     544:	80 61       	ori	r24, 0x10	; 16
     546:	80 83       	st	Z, r24
	
	//Reset the motor:
	motor_reset();
     548:	d6 cf       	rjmp	.-84     	; 0x4f6 <motor_reset>
     54a:	08 95       	ret

0000054c <motor_getEncoder>:

int16_t motor_getEncoder(){
	int16_t encoderVal;
	
	//Set OE low to enable encoder output:
	PORTH &= ~(1 << DDH5);
     54c:	e2 e0       	ldi	r30, 0x02	; 2
     54e:	f1 e0       	ldi	r31, 0x01	; 1
     550:	80 81       	ld	r24, Z
     552:	8f 7d       	andi	r24, 0xDF	; 223
     554:	80 83       	st	Z, r24
	//Set SEL low to get high byte:
	PORTH &= ~(1 << DDH3);
     556:	80 81       	ld	r24, Z
     558:	87 7f       	andi	r24, 0xF7	; 247
     55a:	80 83       	st	Z, r24
     55c:	87 e8       	ldi	r24, 0x87	; 135
     55e:	93 e1       	ldi	r25, 0x13	; 19
     560:	01 97       	sbiw	r24, 0x01	; 1
     562:	f1 f7       	brne	.-4      	; 0x560 <motor_getEncoder+0x14>
     564:	00 c0       	rjmp	.+0      	; 0x566 <motor_getEncoder+0x1a>
     566:	00 00       	nop
	_delay_ms(20);
	encoderVal = PINK << 8; //Read high byte.
     568:	80 91 06 01 	lds	r24, 0x0106
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	98 2f       	mov	r25, r24
     570:	88 27       	eor	r24, r24
	//Set SEL high to get low byte:
	PORTH |= (1 << DDH3);
     572:	20 81       	ld	r18, Z
     574:	28 60       	ori	r18, 0x08	; 8
     576:	20 83       	st	Z, r18
     578:	e7 e8       	ldi	r30, 0x87	; 135
     57a:	f3 e1       	ldi	r31, 0x13	; 19
     57c:	31 97       	sbiw	r30, 0x01	; 1
     57e:	f1 f7       	brne	.-4      	; 0x57c <motor_getEncoder+0x30>
     580:	00 c0       	rjmp	.+0      	; 0x582 <motor_getEncoder+0x36>
     582:	00 00       	nop
	_delay_ms(20);
	encoderVal += PINK; //Read low byte.
     584:	20 91 06 01 	lds	r18, 0x0106
	
	//Set OE high to disable encoder output:
	PORTH |= (1 << DDH5);
     588:	e2 e0       	ldi	r30, 0x02	; 2
     58a:	f1 e0       	ldi	r31, 0x01	; 1
     58c:	30 81       	ld	r19, Z
     58e:	30 62       	ori	r19, 0x20	; 32
     590:	30 83       	st	Z, r19
	
	//Return encoder values:
	return encoderVal;
}
     592:	82 0f       	add	r24, r18
     594:	91 1d       	adc	r25, r1
     596:	08 95       	ret

00000598 <motor_setDir>:


void motor_setDir(motorDir_t dir){
	switch(dir){
     598:	88 23       	and	r24, r24
     59a:	19 f0       	breq	.+6      	; 0x5a2 <motor_setDir+0xa>
     59c:	81 30       	cpi	r24, 0x01	; 1
     59e:	39 f0       	breq	.+14     	; 0x5ae <motor_setDir+0x16>
     5a0:	08 95       	ret
		case LEFT:
			//Clear DIR pin:
			PORTH &= ~(1 << PINH1);
     5a2:	e2 e0       	ldi	r30, 0x02	; 2
     5a4:	f1 e0       	ldi	r31, 0x01	; 1
     5a6:	80 81       	ld	r24, Z
     5a8:	8d 7f       	andi	r24, 0xFD	; 253
     5aa:	80 83       	st	Z, r24
			break;
     5ac:	08 95       	ret
		case RIGHT:
			//Set DIR pin:
			PORTH |= (1 << PINH1);
     5ae:	e2 e0       	ldi	r30, 0x02	; 2
     5b0:	f1 e0       	ldi	r31, 0x01	; 1
     5b2:	80 81       	ld	r24, Z
     5b4:	82 60       	ori	r24, 0x02	; 2
     5b6:	80 83       	st	Z, r24
     5b8:	08 95       	ret

000005ba <motor_setSpeed>:
			break;
	}
}


void motor_setSpeed(char speed){
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
     5be:	00 d0       	rcall	.+0      	; 0x5c0 <motor_setSpeed+0x6>
     5c0:	cd b7       	in	r28, 0x3d	; 61
     5c2:	de b7       	in	r29, 0x3e	; 62
	unsigned char twiMsg [3];
	twiMsg[0] = 0x5E;
     5c4:	9e e5       	ldi	r25, 0x5E	; 94
     5c6:	99 83       	std	Y+1, r25	; 0x01
	twiMsg[1] = 0x00;
     5c8:	1a 82       	std	Y+2, r1	; 0x02
	twiMsg[2] = speed;
     5ca:	8b 83       	std	Y+3, r24	; 0x03
	
	//Wait for TWI Transciever:
	while(TWI_Transceiver_Busy());
     5cc:	93 d0       	rcall	.+294    	; 0x6f4 <TWI_Transceiver_Busy>
     5ce:	81 11       	cpse	r24, r1
     5d0:	fd cf       	rjmp	.-6      	; 0x5cc <motor_setSpeed+0x12>
	TWI_Start_Transceiver_With_Data(twiMsg,3);
     5d2:	63 e0       	ldi	r22, 0x03	; 3
     5d4:	ce 01       	movw	r24, r28
     5d6:	01 96       	adiw	r24, 0x01	; 1
     5d8:	91 d0       	rcall	.+290    	; 0x6fc <TWI_Start_Transceiver_With_Data>
	
	
}
     5da:	0f 90       	pop	r0
     5dc:	0f 90       	pop	r0
     5de:	0f 90       	pop	r0
     5e0:	df 91       	pop	r29
     5e2:	cf 91       	pop	r28
     5e4:	08 95       	ret

000005e6 <motor_joyControl>:

/*
*
* inVal - Assumed to be between -255 and 255
*/
void motor_joyControl(int16_t inVal) {
     5e6:	cf 93       	push	r28
     5e8:	df 93       	push	r29
     5ea:	ec 01       	movw	r28, r24
	
	if(inVal < -10) {
     5ec:	c6 3f       	cpi	r28, 0xF6	; 246
     5ee:	8f ef       	ldi	r24, 0xFF	; 255
     5f0:	d8 07       	cpc	r29, r24
     5f2:	34 f4       	brge	.+12     	; 0x600 <motor_joyControl+0x1a>
		motor_setDir(RIGHT);
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	d0 df       	rcall	.-96     	; 0x598 <motor_setDir>
		motor_setSpeed(-1*inVal);
     5f8:	8c 2f       	mov	r24, r28
     5fa:	81 95       	neg	r24
     5fc:	de df       	rcall	.-68     	; 0x5ba <motor_setSpeed>
     5fe:	0a c0       	rjmp	.+20     	; 0x614 <motor_joyControl+0x2e>
	}
	else if(inVal > 10) {
     600:	cb 30       	cpi	r28, 0x0B	; 11
     602:	d1 05       	cpc	r29, r1
     604:	2c f0       	brlt	.+10     	; 0x610 <motor_joyControl+0x2a>
		motor_setDir(LEFT);
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	c7 df       	rcall	.-114    	; 0x598 <motor_setDir>
		motor_setSpeed(inVal);		
     60a:	8c 2f       	mov	r24, r28
     60c:	d6 df       	rcall	.-84     	; 0x5ba <motor_setSpeed>
     60e:	02 c0       	rjmp	.+4      	; 0x614 <motor_joyControl+0x2e>
	}
	else {
		motor_setSpeed(0);
     610:	80 e0       	ldi	r24, 0x00	; 0
     612:	d3 df       	rcall	.-90     	; 0x5ba <motor_setSpeed>
	}
	
}
     614:	df 91       	pop	r29
     616:	cf 91       	pop	r28
     618:	08 95       	ret

0000061a <servo_init>:

#include <avr/io.h>
#include "servo.h"
void servo_init(){
	
	DDRB |= (1 << PB5); //Set PWM pin output
     61a:	25 9a       	sbi	0x04, 5	; 4
	
	TCCR1B |= (1 << CS11); //Start timer/counter with prescaler = 8
     61c:	e1 e8       	ldi	r30, 0x81	; 129
     61e:	f0 e0       	ldi	r31, 0x00	; 0
     620:	80 81       	ld	r24, Z
     622:	82 60       	ori	r24, 0x02	; 2
     624:	80 83       	st	Z, r24
	
	TCCR1A |= (1 << COM1A1); //Clear OC1A on compare match
     626:	a0 e8       	ldi	r26, 0x80	; 128
     628:	b0 e0       	ldi	r27, 0x00	; 0
     62a:	8c 91       	ld	r24, X
     62c:	80 68       	ori	r24, 0x80	; 128
     62e:	8c 93       	st	X, r24
	
	TCCR1A |= (1 << WGM11); //for FastPWM
     630:	8c 91       	ld	r24, X
     632:	82 60       	ori	r24, 0x02	; 2
     634:	8c 93       	st	X, r24
	TCCR1B |= (1 << WGM12) | (1 << WGM13); //for FastPWM
     636:	80 81       	ld	r24, Z
     638:	88 61       	ori	r24, 0x18	; 24
     63a:	80 83       	st	Z, r24
	
	ICR1 = 39999; //Set frequency to 50Hz
     63c:	8f e3       	ldi	r24, 0x3F	; 63
     63e:	9c e9       	ldi	r25, 0x9C	; 156
     640:	90 93 87 00 	sts	0x0087, r25
     644:	80 93 86 00 	sts	0x0086, r24
	
	OCR1A = MID_VAL; // Set servo to the middle (1.5ms)
     648:	88 eb       	ldi	r24, 0xB8	; 184
     64a:	9b e0       	ldi	r25, 0x0B	; 11
     64c:	90 93 89 00 	sts	0x0089, r25
     650:	80 93 88 00 	sts	0x0088, r24
     654:	08 95       	ret

00000656 <servo_set>:
}

void servo_set(uint16_t inVal) {
	//clamp servo positions between it's lowest and highest values
	if (inVal < LOW_VAL) {
     656:	80 3d       	cpi	r24, 0xD0	; 208
     658:	27 e0       	ldi	r18, 0x07	; 7
     65a:	92 07       	cpc	r25, r18
     65c:	38 f4       	brcc	.+14     	; 0x66c <servo_set+0x16>
		OCR1A = LOW_VAL; 
     65e:	80 ed       	ldi	r24, 0xD0	; 208
     660:	97 e0       	ldi	r25, 0x07	; 7
     662:	90 93 89 00 	sts	0x0089, r25
     666:	80 93 88 00 	sts	0x0088, r24
     66a:	08 95       	ret
	}
	else if(inVal > HIGH_VAL) {
     66c:	8d 33       	cpi	r24, 0x3D	; 61
     66e:	2f e0       	ldi	r18, 0x0F	; 15
     670:	92 07       	cpc	r25, r18
     672:	38 f0       	brcs	.+14     	; 0x682 <servo_set+0x2c>
		OCR1A = HIGH_VAL;
     674:	8c e3       	ldi	r24, 0x3C	; 60
     676:	9f e0       	ldi	r25, 0x0F	; 15
     678:	90 93 89 00 	sts	0x0089, r25
     67c:	80 93 88 00 	sts	0x0088, r24
     680:	08 95       	ret
	}
	else{
		OCR1A = inVal;
     682:	90 93 89 00 	sts	0x0089, r25
     686:	80 93 88 00 	sts	0x0088, r24
     68a:	08 95       	ret

0000068c <solenoid_init>:
#include <avr/io.h>
#include <avr/delay.h>

void solenoid_init(){
	//Set pin as output
	DDRF  |= (1 << DDF1);
     68c:	81 9a       	sbi	0x10, 1	; 16
	
	//Active high or low
	//PORTF |= (1 << PINF1);
	printf("Solenoid Init");
     68e:	8f ed       	ldi	r24, 0xDF	; 223
     690:	92 e0       	ldi	r25, 0x02	; 2
     692:	9f 93       	push	r25
     694:	8f 93       	push	r24
     696:	bc d3       	rcall	.+1912   	; 0xe10 <printf>
     698:	0f 90       	pop	r0
     69a:	0f 90       	pop	r0
     69c:	08 95       	ret

0000069e <solenoid_hit>:
}


void solenoid_hit(){
	//set solenoid pin HIGH
	PORTF |= (1 << PINF1);
     69e:	89 9a       	sbi	0x11, 1	; 17
     6a0:	89 ef       	ldi	r24, 0xF9	; 249
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	f1 f7       	brne	.-4      	; 0x6a4 <solenoid_hit+0x6>
     6a8:	00 c0       	rjmp	.+0      	; 0x6aa <solenoid_hit+0xc>
     6aa:	00 00       	nop
	//wait
	_delay_ms(1);
	//set solenoid pin LOW
	PORTF &= ~(1 << PINF1);
     6ac:	89 98       	cbi	0x11, 1	; 17
     6ae:	08 95       	ret

000006b0 <spi_init>:
     6b0:	84 b1       	in	r24, 0x04	; 4
     6b2:	86 60       	ori	r24, 0x06	; 6
     6b4:	84 b9       	out	0x04, r24	; 4
     6b6:	84 b1       	in	r24, 0x04	; 4
     6b8:	81 68       	ori	r24, 0x81	; 129
     6ba:	84 b9       	out	0x04, r24	; 4
     6bc:	28 9a       	sbi	0x05, 0	; 5
     6be:	8c b5       	in	r24, 0x2c	; 44
     6c0:	80 61       	ori	r24, 0x10	; 16
     6c2:	8c bd       	out	0x2c, r24	; 44
     6c4:	8c b5       	in	r24, 0x2c	; 44
     6c6:	81 60       	ori	r24, 0x01	; 1
     6c8:	8c bd       	out	0x2c, r24	; 44
     6ca:	8c b5       	in	r24, 0x2c	; 44
     6cc:	80 64       	ori	r24, 0x40	; 64
     6ce:	8c bd       	out	0x2c, r24	; 44
     6d0:	08 95       	ret

000006d2 <spi_transmit>:
     6d2:	8e bd       	out	0x2e, r24	; 46
     6d4:	0d b4       	in	r0, 0x2d	; 45
     6d6:	07 fe       	sbrs	r0, 7
     6d8:	fd cf       	rjmp	.-6      	; 0x6d4 <spi_transmit+0x2>
     6da:	08 95       	ret

000006dc <spi_read>:
     6dc:	8e b5       	in	r24, 0x2e	; 46
     6de:	08 95       	ret

000006e0 <TWI_Master_Initialise>:
     6e0:	8c e0       	ldi	r24, 0x0C	; 12
     6e2:	80 93 b8 00 	sts	0x00B8, r24
     6e6:	8f ef       	ldi	r24, 0xFF	; 255
     6e8:	80 93 bb 00 	sts	0x00BB, r24
     6ec:	84 e0       	ldi	r24, 0x04	; 4
     6ee:	80 93 bc 00 	sts	0x00BC, r24
     6f2:	08 95       	ret

000006f4 <TWI_Transceiver_Busy>:
     6f4:	80 91 bc 00 	lds	r24, 0x00BC
     6f8:	81 70       	andi	r24, 0x01	; 1
     6fa:	08 95       	ret

000006fc <TWI_Start_Transceiver_With_Data>:
     6fc:	ec eb       	ldi	r30, 0xBC	; 188
     6fe:	f0 e0       	ldi	r31, 0x00	; 0
     700:	20 81       	ld	r18, Z
     702:	20 fd       	sbrc	r18, 0
     704:	fd cf       	rjmp	.-6      	; 0x700 <TWI_Start_Transceiver_With_Data+0x4>
     706:	60 93 f0 02 	sts	0x02F0, r22
     70a:	fc 01       	movw	r30, r24
     70c:	20 81       	ld	r18, Z
     70e:	20 93 f1 02 	sts	0x02F1, r18
     712:	20 fd       	sbrc	r18, 0
     714:	0c c0       	rjmp	.+24     	; 0x72e <TWI_Start_Transceiver_With_Data+0x32>
     716:	62 30       	cpi	r22, 0x02	; 2
     718:	50 f0       	brcs	.+20     	; 0x72e <TWI_Start_Transceiver_With_Data+0x32>
     71a:	dc 01       	movw	r26, r24
     71c:	11 96       	adiw	r26, 0x01	; 1
     71e:	e2 ef       	ldi	r30, 0xF2	; 242
     720:	f2 e0       	ldi	r31, 0x02	; 2
     722:	81 e0       	ldi	r24, 0x01	; 1
     724:	9d 91       	ld	r25, X+
     726:	91 93       	st	Z+, r25
     728:	8f 5f       	subi	r24, 0xFF	; 255
     72a:	86 13       	cpse	r24, r22
     72c:	fb cf       	rjmp	.-10     	; 0x724 <TWI_Start_Transceiver_With_Data+0x28>
     72e:	10 92 ef 02 	sts	0x02EF, r1
     732:	88 ef       	ldi	r24, 0xF8	; 248
     734:	80 93 06 02 	sts	0x0206, r24
     738:	85 ea       	ldi	r24, 0xA5	; 165
     73a:	80 93 bc 00 	sts	0x00BC, r24
     73e:	08 95       	ret

00000740 <__vector_39>:
     740:	1f 92       	push	r1
     742:	0f 92       	push	r0
     744:	0f b6       	in	r0, 0x3f	; 63
     746:	0f 92       	push	r0
     748:	11 24       	eor	r1, r1
     74a:	0b b6       	in	r0, 0x3b	; 59
     74c:	0f 92       	push	r0
     74e:	2f 93       	push	r18
     750:	3f 93       	push	r19
     752:	8f 93       	push	r24
     754:	9f 93       	push	r25
     756:	af 93       	push	r26
     758:	bf 93       	push	r27
     75a:	ef 93       	push	r30
     75c:	ff 93       	push	r31
     75e:	80 91 b9 00 	lds	r24, 0x00B9
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	fc 01       	movw	r30, r24
     766:	38 97       	sbiw	r30, 0x08	; 8
     768:	e1 35       	cpi	r30, 0x51	; 81
     76a:	f1 05       	cpc	r31, r1
     76c:	08 f0       	brcs	.+2      	; 0x770 <__vector_39+0x30>
     76e:	55 c0       	rjmp	.+170    	; 0x81a <__vector_39+0xda>
     770:	ee 58       	subi	r30, 0x8E	; 142
     772:	ff 4f       	sbci	r31, 0xFF	; 255
     774:	fd c2       	rjmp	.+1530   	; 0xd70 <__tablejump2__>
     776:	10 92 ee 02 	sts	0x02EE, r1
     77a:	e0 91 ee 02 	lds	r30, 0x02EE
     77e:	80 91 f0 02 	lds	r24, 0x02F0
     782:	e8 17       	cp	r30, r24
     784:	70 f4       	brcc	.+28     	; 0x7a2 <__vector_39+0x62>
     786:	81 e0       	ldi	r24, 0x01	; 1
     788:	8e 0f       	add	r24, r30
     78a:	80 93 ee 02 	sts	0x02EE, r24
     78e:	f0 e0       	ldi	r31, 0x00	; 0
     790:	ef 50       	subi	r30, 0x0F	; 15
     792:	fd 4f       	sbci	r31, 0xFD	; 253
     794:	80 81       	ld	r24, Z
     796:	80 93 bb 00 	sts	0x00BB, r24
     79a:	85 e8       	ldi	r24, 0x85	; 133
     79c:	80 93 bc 00 	sts	0x00BC, r24
     7a0:	43 c0       	rjmp	.+134    	; 0x828 <__vector_39+0xe8>
     7a2:	80 91 ef 02 	lds	r24, 0x02EF
     7a6:	81 60       	ori	r24, 0x01	; 1
     7a8:	80 93 ef 02 	sts	0x02EF, r24
     7ac:	84 e9       	ldi	r24, 0x94	; 148
     7ae:	80 93 bc 00 	sts	0x00BC, r24
     7b2:	3a c0       	rjmp	.+116    	; 0x828 <__vector_39+0xe8>
     7b4:	e0 91 ee 02 	lds	r30, 0x02EE
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	8e 0f       	add	r24, r30
     7bc:	80 93 ee 02 	sts	0x02EE, r24
     7c0:	80 91 bb 00 	lds	r24, 0x00BB
     7c4:	f0 e0       	ldi	r31, 0x00	; 0
     7c6:	ef 50       	subi	r30, 0x0F	; 15
     7c8:	fd 4f       	sbci	r31, 0xFD	; 253
     7ca:	80 83       	st	Z, r24
     7cc:	20 91 ee 02 	lds	r18, 0x02EE
     7d0:	30 e0       	ldi	r19, 0x00	; 0
     7d2:	80 91 f0 02 	lds	r24, 0x02F0
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	01 97       	sbiw	r24, 0x01	; 1
     7da:	28 17       	cp	r18, r24
     7dc:	39 07       	cpc	r19, r25
     7de:	24 f4       	brge	.+8      	; 0x7e8 <__vector_39+0xa8>
     7e0:	85 ec       	ldi	r24, 0xC5	; 197
     7e2:	80 93 bc 00 	sts	0x00BC, r24
     7e6:	20 c0       	rjmp	.+64     	; 0x828 <__vector_39+0xe8>
     7e8:	85 e8       	ldi	r24, 0x85	; 133
     7ea:	80 93 bc 00 	sts	0x00BC, r24
     7ee:	1c c0       	rjmp	.+56     	; 0x828 <__vector_39+0xe8>
     7f0:	80 91 bb 00 	lds	r24, 0x00BB
     7f4:	e0 91 ee 02 	lds	r30, 0x02EE
     7f8:	f0 e0       	ldi	r31, 0x00	; 0
     7fa:	ef 50       	subi	r30, 0x0F	; 15
     7fc:	fd 4f       	sbci	r31, 0xFD	; 253
     7fe:	80 83       	st	Z, r24
     800:	80 91 ef 02 	lds	r24, 0x02EF
     804:	81 60       	ori	r24, 0x01	; 1
     806:	80 93 ef 02 	sts	0x02EF, r24
     80a:	84 e9       	ldi	r24, 0x94	; 148
     80c:	80 93 bc 00 	sts	0x00BC, r24
     810:	0b c0       	rjmp	.+22     	; 0x828 <__vector_39+0xe8>
     812:	85 ea       	ldi	r24, 0xA5	; 165
     814:	80 93 bc 00 	sts	0x00BC, r24
     818:	07 c0       	rjmp	.+14     	; 0x828 <__vector_39+0xe8>
     81a:	80 91 b9 00 	lds	r24, 0x00B9
     81e:	80 93 06 02 	sts	0x0206, r24
     822:	84 e0       	ldi	r24, 0x04	; 4
     824:	80 93 bc 00 	sts	0x00BC, r24
     828:	ff 91       	pop	r31
     82a:	ef 91       	pop	r30
     82c:	bf 91       	pop	r27
     82e:	af 91       	pop	r26
     830:	9f 91       	pop	r25
     832:	8f 91       	pop	r24
     834:	3f 91       	pop	r19
     836:	2f 91       	pop	r18
     838:	0f 90       	pop	r0
     83a:	0b be       	out	0x3b, r0	; 59
     83c:	0f 90       	pop	r0
     83e:	0f be       	out	0x3f, r0	; 63
     840:	0f 90       	pop	r0
     842:	1f 90       	pop	r1
     844:	18 95       	reti

00000846 <UART_recieve>:
     846:	e0 ec       	ldi	r30, 0xC0	; 192
     848:	f0 e0       	ldi	r31, 0x00	; 0
     84a:	80 81       	ld	r24, Z
     84c:	88 23       	and	r24, r24
     84e:	ec f7       	brge	.-6      	; 0x84a <UART_recieve+0x4>
     850:	80 91 c6 00 	lds	r24, 0x00C6
     854:	08 95       	ret

00000856 <UART_transmit>:
     856:	e0 ec       	ldi	r30, 0xC0	; 192
     858:	f0 e0       	ldi	r31, 0x00	; 0
     85a:	90 81       	ld	r25, Z
     85c:	95 ff       	sbrs	r25, 5
     85e:	fd cf       	rjmp	.-6      	; 0x85a <UART_transmit+0x4>
     860:	80 93 c6 00 	sts	0x00C6, r24
     864:	08 95       	ret

00000866 <UART_init>:
     866:	90 93 c5 00 	sts	0x00C5, r25
     86a:	80 93 c4 00 	sts	0x00C4, r24
     86e:	e1 ec       	ldi	r30, 0xC1	; 193
     870:	f0 e0       	ldi	r31, 0x00	; 0
     872:	80 81       	ld	r24, Z
     874:	88 61       	ori	r24, 0x18	; 24
     876:	80 83       	st	Z, r24
     878:	e2 ec       	ldi	r30, 0xC2	; 194
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	80 81       	ld	r24, Z
     87e:	86 60       	ori	r24, 0x06	; 6
     880:	80 83       	st	Z, r24
     882:	08 95       	ret

00000884 <UART_parsePrint>:
     884:	63 e2       	ldi	r22, 0x23	; 35
     886:	74 e0       	ldi	r23, 0x04	; 4
     888:	8b e2       	ldi	r24, 0x2B	; 43
     88a:	94 e0       	ldi	r25, 0x04	; 4
     88c:	77 c2       	rjmp	.+1262   	; 0xd7c <fdevopen>
     88e:	08 95       	ret

00000890 <utilities_joyToServo>:

#include "servo.h"

uint16_t utilities_joyToServo(uint8_t joyVal) {
	//switch to math without integers
	double newVal = (double)joyVal;
     890:	68 2f       	mov	r22, r24
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	80 e0       	ldi	r24, 0x00	; 0
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	52 d1       	rcall	.+676    	; 0xb3e <__floatunsisf>
	
	//Go from 0-255 -> 0-1
	newVal /= 255;
     89a:	20 e0       	ldi	r18, 0x00	; 0
     89c:	30 e0       	ldi	r19, 0x00	; 0
     89e:	4f e7       	ldi	r20, 0x7F	; 127
     8a0:	53 e4       	ldi	r21, 0x43	; 67
     8a2:	b4 d0       	rcall	.+360    	; 0xa0c <__divsf3>
	
	//Go from 0-1 -> 0-(HIGH_VAL-LOW_VAL)
	newVal *= (HIGH_VAL-LOW_VAL);
     8a4:	20 e0       	ldi	r18, 0x00	; 0
     8a6:	30 e8       	ldi	r19, 0x80	; 128
     8a8:	4d ee       	ldi	r20, 0xED	; 237
     8aa:	54 e4       	ldi	r21, 0x44	; 68
     8ac:	fe d1       	rcall	.+1020   	; 0xcaa <__mulsf3>
	
	//Go from 0-(HIGH_VAL-LOW_VAL) -> LOW_VAL-HIGH_VAL
	newVal += LOW_VAL;
     8ae:	20 e0       	ldi	r18, 0x00	; 0
     8b0:	30 e0       	ldi	r19, 0x00	; 0
     8b2:	4a ef       	ldi	r20, 0xFA	; 250
     8b4:	54 e4       	ldi	r21, 0x44	; 68
     8b6:	42 d0       	rcall	.+132    	; 0x93c <__addsf3>
	
	return (uint16_t)newVal;
     8b8:	16 d1       	rcall	.+556    	; 0xae6 <__fixunssfsi>
}
     8ba:	cb 01       	movw	r24, r22
     8bc:	08 95       	ret

000008be <utilities_joyToMotor>:

int16_t utilities_joyToMotor(uint8_t joyVal) {
     8be:	cf 92       	push	r12
     8c0:	df 92       	push	r13
     8c2:	ef 92       	push	r14
     8c4:	ff 92       	push	r15
	//switch to math without integers
	double newVal = (double)joyVal;
     8c6:	68 2f       	mov	r22, r24
     8c8:	70 e0       	ldi	r23, 0x00	; 0
     8ca:	80 e0       	ldi	r24, 0x00	; 0
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	37 d1       	rcall	.+622    	; 0xb3e <__floatunsisf>
	
	//Go from 0-1 -> 0-(HIGH_VAL-LOW_VAL)
	newVal *= 2;
     8d0:	9b 01       	movw	r18, r22
     8d2:	ac 01       	movw	r20, r24
     8d4:	33 d0       	rcall	.+102    	; 0x93c <__addsf3>
	
	//Go from 0-(HIGH_VAL-LOW_VAL) -> LOW_VAL-HIGH_VAL
	newVal -= 255;
     8d6:	20 e0       	ldi	r18, 0x00	; 0
     8d8:	30 e0       	ldi	r19, 0x00	; 0
     8da:	4f e7       	ldi	r20, 0x7F	; 127
     8dc:	53 e4       	ldi	r21, 0x43	; 67
     8de:	2d d0       	rcall	.+90     	; 0x93a <__subsf3>
     8e0:	6b 01       	movw	r12, r22
     8e2:	7c 01       	movw	r14, r24
	
	//Clamp end values
	if(newVal < -255) {
     8e4:	20 e0       	ldi	r18, 0x00	; 0
     8e6:	30 e0       	ldi	r19, 0x00	; 0
     8e8:	4f e7       	ldi	r20, 0x7F	; 127
     8ea:	53 ec       	ldi	r21, 0xC3	; 195
     8ec:	8b d0       	rcall	.+278    	; 0xa04 <__cmpsf2>
     8ee:	88 23       	and	r24, r24
     8f0:	54 f0       	brlt	.+20     	; 0x906 <utilities_joyToMotor+0x48>
		newVal = -255;
	}
	else if(newVal > 255) {
     8f2:	20 e0       	ldi	r18, 0x00	; 0
     8f4:	30 e0       	ldi	r19, 0x00	; 0
     8f6:	4f e7       	ldi	r20, 0x7F	; 127
     8f8:	53 e4       	ldi	r21, 0x43	; 67
     8fa:	c7 01       	movw	r24, r14
     8fc:	b6 01       	movw	r22, r12
     8fe:	d1 d1       	rcall	.+930    	; 0xca2 <__gesf2>
     900:	18 16       	cp	r1, r24
     902:	54 f0       	brlt	.+20     	; 0x918 <utilities_joyToMotor+0x5a>
     904:	11 c0       	rjmp	.+34     	; 0x928 <utilities_joyToMotor+0x6a>
	//Go from 0-(HIGH_VAL-LOW_VAL) -> LOW_VAL-HIGH_VAL
	newVal -= 255;
	
	//Clamp end values
	if(newVal < -255) {
		newVal = -255;
     906:	0f 2e       	mov	r0, r31
     908:	c1 2c       	mov	r12, r1
     90a:	d1 2c       	mov	r13, r1
     90c:	ff e7       	ldi	r31, 0x7F	; 127
     90e:	ef 2e       	mov	r14, r31
     910:	f3 ec       	ldi	r31, 0xC3	; 195
     912:	ff 2e       	mov	r15, r31
     914:	f0 2d       	mov	r31, r0
     916:	08 c0       	rjmp	.+16     	; 0x928 <utilities_joyToMotor+0x6a>
	}
	else if(newVal > 255) {
		newVal = 255;
     918:	0f 2e       	mov	r0, r31
     91a:	c1 2c       	mov	r12, r1
     91c:	d1 2c       	mov	r13, r1
     91e:	ff e7       	ldi	r31, 0x7F	; 127
     920:	ef 2e       	mov	r14, r31
     922:	f3 e4       	ldi	r31, 0x43	; 67
     924:	ff 2e       	mov	r15, r31
     926:	f0 2d       	mov	r31, r0
	}
	
	return (int16_t)newVal;
     928:	c7 01       	movw	r24, r14
     92a:	b6 01       	movw	r22, r12
     92c:	d7 d0       	rcall	.+430    	; 0xadc <__fixsfsi>
     92e:	cb 01       	movw	r24, r22
     930:	ff 90       	pop	r15
     932:	ef 90       	pop	r14
     934:	df 90       	pop	r13
     936:	cf 90       	pop	r12
     938:	08 95       	ret

0000093a <__subsf3>:
     93a:	50 58       	subi	r21, 0x80	; 128

0000093c <__addsf3>:
     93c:	bb 27       	eor	r27, r27
     93e:	aa 27       	eor	r26, r26
     940:	0e d0       	rcall	.+28     	; 0x95e <__addsf3x>
     942:	75 c1       	rjmp	.+746    	; 0xc2e <__fp_round>
     944:	66 d1       	rcall	.+716    	; 0xc12 <__fp_pscA>
     946:	30 f0       	brcs	.+12     	; 0x954 <__addsf3+0x18>
     948:	6b d1       	rcall	.+726    	; 0xc20 <__fp_pscB>
     94a:	20 f0       	brcs	.+8      	; 0x954 <__addsf3+0x18>
     94c:	31 f4       	brne	.+12     	; 0x95a <__addsf3+0x1e>
     94e:	9f 3f       	cpi	r25, 0xFF	; 255
     950:	11 f4       	brne	.+4      	; 0x956 <__addsf3+0x1a>
     952:	1e f4       	brtc	.+6      	; 0x95a <__addsf3+0x1e>
     954:	5b c1       	rjmp	.+694    	; 0xc0c <__fp_nan>
     956:	0e f4       	brtc	.+2      	; 0x95a <__addsf3+0x1e>
     958:	e0 95       	com	r30
     95a:	e7 fb       	bst	r30, 7
     95c:	51 c1       	rjmp	.+674    	; 0xc00 <__fp_inf>

0000095e <__addsf3x>:
     95e:	e9 2f       	mov	r30, r25
     960:	77 d1       	rcall	.+750    	; 0xc50 <__fp_split3>
     962:	80 f3       	brcs	.-32     	; 0x944 <__addsf3+0x8>
     964:	ba 17       	cp	r27, r26
     966:	62 07       	cpc	r22, r18
     968:	73 07       	cpc	r23, r19
     96a:	84 07       	cpc	r24, r20
     96c:	95 07       	cpc	r25, r21
     96e:	18 f0       	brcs	.+6      	; 0x976 <__addsf3x+0x18>
     970:	71 f4       	brne	.+28     	; 0x98e <__addsf3x+0x30>
     972:	9e f5       	brtc	.+102    	; 0x9da <__addsf3x+0x7c>
     974:	8f c1       	rjmp	.+798    	; 0xc94 <__fp_zero>
     976:	0e f4       	brtc	.+2      	; 0x97a <__addsf3x+0x1c>
     978:	e0 95       	com	r30
     97a:	0b 2e       	mov	r0, r27
     97c:	ba 2f       	mov	r27, r26
     97e:	a0 2d       	mov	r26, r0
     980:	0b 01       	movw	r0, r22
     982:	b9 01       	movw	r22, r18
     984:	90 01       	movw	r18, r0
     986:	0c 01       	movw	r0, r24
     988:	ca 01       	movw	r24, r20
     98a:	a0 01       	movw	r20, r0
     98c:	11 24       	eor	r1, r1
     98e:	ff 27       	eor	r31, r31
     990:	59 1b       	sub	r21, r25
     992:	99 f0       	breq	.+38     	; 0x9ba <__addsf3x+0x5c>
     994:	59 3f       	cpi	r21, 0xF9	; 249
     996:	50 f4       	brcc	.+20     	; 0x9ac <__addsf3x+0x4e>
     998:	50 3e       	cpi	r21, 0xE0	; 224
     99a:	68 f1       	brcs	.+90     	; 0x9f6 <__addsf3x+0x98>
     99c:	1a 16       	cp	r1, r26
     99e:	f0 40       	sbci	r31, 0x00	; 0
     9a0:	a2 2f       	mov	r26, r18
     9a2:	23 2f       	mov	r18, r19
     9a4:	34 2f       	mov	r19, r20
     9a6:	44 27       	eor	r20, r20
     9a8:	58 5f       	subi	r21, 0xF8	; 248
     9aa:	f3 cf       	rjmp	.-26     	; 0x992 <__addsf3x+0x34>
     9ac:	46 95       	lsr	r20
     9ae:	37 95       	ror	r19
     9b0:	27 95       	ror	r18
     9b2:	a7 95       	ror	r26
     9b4:	f0 40       	sbci	r31, 0x00	; 0
     9b6:	53 95       	inc	r21
     9b8:	c9 f7       	brne	.-14     	; 0x9ac <__addsf3x+0x4e>
     9ba:	7e f4       	brtc	.+30     	; 0x9da <__addsf3x+0x7c>
     9bc:	1f 16       	cp	r1, r31
     9be:	ba 0b       	sbc	r27, r26
     9c0:	62 0b       	sbc	r22, r18
     9c2:	73 0b       	sbc	r23, r19
     9c4:	84 0b       	sbc	r24, r20
     9c6:	ba f0       	brmi	.+46     	; 0x9f6 <__addsf3x+0x98>
     9c8:	91 50       	subi	r25, 0x01	; 1
     9ca:	a1 f0       	breq	.+40     	; 0x9f4 <__addsf3x+0x96>
     9cc:	ff 0f       	add	r31, r31
     9ce:	bb 1f       	adc	r27, r27
     9d0:	66 1f       	adc	r22, r22
     9d2:	77 1f       	adc	r23, r23
     9d4:	88 1f       	adc	r24, r24
     9d6:	c2 f7       	brpl	.-16     	; 0x9c8 <__addsf3x+0x6a>
     9d8:	0e c0       	rjmp	.+28     	; 0x9f6 <__addsf3x+0x98>
     9da:	ba 0f       	add	r27, r26
     9dc:	62 1f       	adc	r22, r18
     9de:	73 1f       	adc	r23, r19
     9e0:	84 1f       	adc	r24, r20
     9e2:	48 f4       	brcc	.+18     	; 0x9f6 <__addsf3x+0x98>
     9e4:	87 95       	ror	r24
     9e6:	77 95       	ror	r23
     9e8:	67 95       	ror	r22
     9ea:	b7 95       	ror	r27
     9ec:	f7 95       	ror	r31
     9ee:	9e 3f       	cpi	r25, 0xFE	; 254
     9f0:	08 f0       	brcs	.+2      	; 0x9f4 <__addsf3x+0x96>
     9f2:	b3 cf       	rjmp	.-154    	; 0x95a <__addsf3+0x1e>
     9f4:	93 95       	inc	r25
     9f6:	88 0f       	add	r24, r24
     9f8:	08 f0       	brcs	.+2      	; 0x9fc <__addsf3x+0x9e>
     9fa:	99 27       	eor	r25, r25
     9fc:	ee 0f       	add	r30, r30
     9fe:	97 95       	ror	r25
     a00:	87 95       	ror	r24
     a02:	08 95       	ret

00000a04 <__cmpsf2>:
     a04:	d9 d0       	rcall	.+434    	; 0xbb8 <__fp_cmp>
     a06:	08 f4       	brcc	.+2      	; 0xa0a <__cmpsf2+0x6>
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	08 95       	ret

00000a0c <__divsf3>:
     a0c:	0c d0       	rcall	.+24     	; 0xa26 <__divsf3x>
     a0e:	0f c1       	rjmp	.+542    	; 0xc2e <__fp_round>
     a10:	07 d1       	rcall	.+526    	; 0xc20 <__fp_pscB>
     a12:	40 f0       	brcs	.+16     	; 0xa24 <__divsf3+0x18>
     a14:	fe d0       	rcall	.+508    	; 0xc12 <__fp_pscA>
     a16:	30 f0       	brcs	.+12     	; 0xa24 <__divsf3+0x18>
     a18:	21 f4       	brne	.+8      	; 0xa22 <__divsf3+0x16>
     a1a:	5f 3f       	cpi	r21, 0xFF	; 255
     a1c:	19 f0       	breq	.+6      	; 0xa24 <__divsf3+0x18>
     a1e:	f0 c0       	rjmp	.+480    	; 0xc00 <__fp_inf>
     a20:	51 11       	cpse	r21, r1
     a22:	39 c1       	rjmp	.+626    	; 0xc96 <__fp_szero>
     a24:	f3 c0       	rjmp	.+486    	; 0xc0c <__fp_nan>

00000a26 <__divsf3x>:
     a26:	14 d1       	rcall	.+552    	; 0xc50 <__fp_split3>
     a28:	98 f3       	brcs	.-26     	; 0xa10 <__divsf3+0x4>

00000a2a <__divsf3_pse>:
     a2a:	99 23       	and	r25, r25
     a2c:	c9 f3       	breq	.-14     	; 0xa20 <__divsf3+0x14>
     a2e:	55 23       	and	r21, r21
     a30:	b1 f3       	breq	.-20     	; 0xa1e <__divsf3+0x12>
     a32:	95 1b       	sub	r25, r21
     a34:	55 0b       	sbc	r21, r21
     a36:	bb 27       	eor	r27, r27
     a38:	aa 27       	eor	r26, r26
     a3a:	62 17       	cp	r22, r18
     a3c:	73 07       	cpc	r23, r19
     a3e:	84 07       	cpc	r24, r20
     a40:	38 f0       	brcs	.+14     	; 0xa50 <__divsf3_pse+0x26>
     a42:	9f 5f       	subi	r25, 0xFF	; 255
     a44:	5f 4f       	sbci	r21, 0xFF	; 255
     a46:	22 0f       	add	r18, r18
     a48:	33 1f       	adc	r19, r19
     a4a:	44 1f       	adc	r20, r20
     a4c:	aa 1f       	adc	r26, r26
     a4e:	a9 f3       	breq	.-22     	; 0xa3a <__divsf3_pse+0x10>
     a50:	33 d0       	rcall	.+102    	; 0xab8 <__divsf3_pse+0x8e>
     a52:	0e 2e       	mov	r0, r30
     a54:	3a f0       	brmi	.+14     	; 0xa64 <__divsf3_pse+0x3a>
     a56:	e0 e8       	ldi	r30, 0x80	; 128
     a58:	30 d0       	rcall	.+96     	; 0xaba <__divsf3_pse+0x90>
     a5a:	91 50       	subi	r25, 0x01	; 1
     a5c:	50 40       	sbci	r21, 0x00	; 0
     a5e:	e6 95       	lsr	r30
     a60:	00 1c       	adc	r0, r0
     a62:	ca f7       	brpl	.-14     	; 0xa56 <__divsf3_pse+0x2c>
     a64:	29 d0       	rcall	.+82     	; 0xab8 <__divsf3_pse+0x8e>
     a66:	fe 2f       	mov	r31, r30
     a68:	27 d0       	rcall	.+78     	; 0xab8 <__divsf3_pse+0x8e>
     a6a:	66 0f       	add	r22, r22
     a6c:	77 1f       	adc	r23, r23
     a6e:	88 1f       	adc	r24, r24
     a70:	bb 1f       	adc	r27, r27
     a72:	26 17       	cp	r18, r22
     a74:	37 07       	cpc	r19, r23
     a76:	48 07       	cpc	r20, r24
     a78:	ab 07       	cpc	r26, r27
     a7a:	b0 e8       	ldi	r27, 0x80	; 128
     a7c:	09 f0       	breq	.+2      	; 0xa80 <__divsf3_pse+0x56>
     a7e:	bb 0b       	sbc	r27, r27
     a80:	80 2d       	mov	r24, r0
     a82:	bf 01       	movw	r22, r30
     a84:	ff 27       	eor	r31, r31
     a86:	93 58       	subi	r25, 0x83	; 131
     a88:	5f 4f       	sbci	r21, 0xFF	; 255
     a8a:	2a f0       	brmi	.+10     	; 0xa96 <__divsf3_pse+0x6c>
     a8c:	9e 3f       	cpi	r25, 0xFE	; 254
     a8e:	51 05       	cpc	r21, r1
     a90:	68 f0       	brcs	.+26     	; 0xaac <__divsf3_pse+0x82>
     a92:	b6 c0       	rjmp	.+364    	; 0xc00 <__fp_inf>
     a94:	00 c1       	rjmp	.+512    	; 0xc96 <__fp_szero>
     a96:	5f 3f       	cpi	r21, 0xFF	; 255
     a98:	ec f3       	brlt	.-6      	; 0xa94 <__divsf3_pse+0x6a>
     a9a:	98 3e       	cpi	r25, 0xE8	; 232
     a9c:	dc f3       	brlt	.-10     	; 0xa94 <__divsf3_pse+0x6a>
     a9e:	86 95       	lsr	r24
     aa0:	77 95       	ror	r23
     aa2:	67 95       	ror	r22
     aa4:	b7 95       	ror	r27
     aa6:	f7 95       	ror	r31
     aa8:	9f 5f       	subi	r25, 0xFF	; 255
     aaa:	c9 f7       	brne	.-14     	; 0xa9e <__divsf3_pse+0x74>
     aac:	88 0f       	add	r24, r24
     aae:	91 1d       	adc	r25, r1
     ab0:	96 95       	lsr	r25
     ab2:	87 95       	ror	r24
     ab4:	97 f9       	bld	r25, 7
     ab6:	08 95       	ret
     ab8:	e1 e0       	ldi	r30, 0x01	; 1
     aba:	66 0f       	add	r22, r22
     abc:	77 1f       	adc	r23, r23
     abe:	88 1f       	adc	r24, r24
     ac0:	bb 1f       	adc	r27, r27
     ac2:	62 17       	cp	r22, r18
     ac4:	73 07       	cpc	r23, r19
     ac6:	84 07       	cpc	r24, r20
     ac8:	ba 07       	cpc	r27, r26
     aca:	20 f0       	brcs	.+8      	; 0xad4 <__divsf3_pse+0xaa>
     acc:	62 1b       	sub	r22, r18
     ace:	73 0b       	sbc	r23, r19
     ad0:	84 0b       	sbc	r24, r20
     ad2:	ba 0b       	sbc	r27, r26
     ad4:	ee 1f       	adc	r30, r30
     ad6:	88 f7       	brcc	.-30     	; 0xaba <__divsf3_pse+0x90>
     ad8:	e0 95       	com	r30
     ada:	08 95       	ret

00000adc <__fixsfsi>:
     adc:	04 d0       	rcall	.+8      	; 0xae6 <__fixunssfsi>
     ade:	68 94       	set
     ae0:	b1 11       	cpse	r27, r1
     ae2:	d9 c0       	rjmp	.+434    	; 0xc96 <__fp_szero>
     ae4:	08 95       	ret

00000ae6 <__fixunssfsi>:
     ae6:	bc d0       	rcall	.+376    	; 0xc60 <__fp_splitA>
     ae8:	88 f0       	brcs	.+34     	; 0xb0c <__fixunssfsi+0x26>
     aea:	9f 57       	subi	r25, 0x7F	; 127
     aec:	90 f0       	brcs	.+36     	; 0xb12 <__fixunssfsi+0x2c>
     aee:	b9 2f       	mov	r27, r25
     af0:	99 27       	eor	r25, r25
     af2:	b7 51       	subi	r27, 0x17	; 23
     af4:	a0 f0       	brcs	.+40     	; 0xb1e <__fixunssfsi+0x38>
     af6:	d1 f0       	breq	.+52     	; 0xb2c <__fixunssfsi+0x46>
     af8:	66 0f       	add	r22, r22
     afa:	77 1f       	adc	r23, r23
     afc:	88 1f       	adc	r24, r24
     afe:	99 1f       	adc	r25, r25
     b00:	1a f0       	brmi	.+6      	; 0xb08 <__fixunssfsi+0x22>
     b02:	ba 95       	dec	r27
     b04:	c9 f7       	brne	.-14     	; 0xaf8 <__fixunssfsi+0x12>
     b06:	12 c0       	rjmp	.+36     	; 0xb2c <__fixunssfsi+0x46>
     b08:	b1 30       	cpi	r27, 0x01	; 1
     b0a:	81 f0       	breq	.+32     	; 0xb2c <__fixunssfsi+0x46>
     b0c:	c3 d0       	rcall	.+390    	; 0xc94 <__fp_zero>
     b0e:	b1 e0       	ldi	r27, 0x01	; 1
     b10:	08 95       	ret
     b12:	c0 c0       	rjmp	.+384    	; 0xc94 <__fp_zero>
     b14:	67 2f       	mov	r22, r23
     b16:	78 2f       	mov	r23, r24
     b18:	88 27       	eor	r24, r24
     b1a:	b8 5f       	subi	r27, 0xF8	; 248
     b1c:	39 f0       	breq	.+14     	; 0xb2c <__fixunssfsi+0x46>
     b1e:	b9 3f       	cpi	r27, 0xF9	; 249
     b20:	cc f3       	brlt	.-14     	; 0xb14 <__fixunssfsi+0x2e>
     b22:	86 95       	lsr	r24
     b24:	77 95       	ror	r23
     b26:	67 95       	ror	r22
     b28:	b3 95       	inc	r27
     b2a:	d9 f7       	brne	.-10     	; 0xb22 <__fixunssfsi+0x3c>
     b2c:	3e f4       	brtc	.+14     	; 0xb3c <__fixunssfsi+0x56>
     b2e:	90 95       	com	r25
     b30:	80 95       	com	r24
     b32:	70 95       	com	r23
     b34:	61 95       	neg	r22
     b36:	7f 4f       	sbci	r23, 0xFF	; 255
     b38:	8f 4f       	sbci	r24, 0xFF	; 255
     b3a:	9f 4f       	sbci	r25, 0xFF	; 255
     b3c:	08 95       	ret

00000b3e <__floatunsisf>:
     b3e:	e8 94       	clt
     b40:	09 c0       	rjmp	.+18     	; 0xb54 <__floatsisf+0x12>

00000b42 <__floatsisf>:
     b42:	97 fb       	bst	r25, 7
     b44:	3e f4       	brtc	.+14     	; 0xb54 <__floatsisf+0x12>
     b46:	90 95       	com	r25
     b48:	80 95       	com	r24
     b4a:	70 95       	com	r23
     b4c:	61 95       	neg	r22
     b4e:	7f 4f       	sbci	r23, 0xFF	; 255
     b50:	8f 4f       	sbci	r24, 0xFF	; 255
     b52:	9f 4f       	sbci	r25, 0xFF	; 255
     b54:	99 23       	and	r25, r25
     b56:	a9 f0       	breq	.+42     	; 0xb82 <__floatsisf+0x40>
     b58:	f9 2f       	mov	r31, r25
     b5a:	96 e9       	ldi	r25, 0x96	; 150
     b5c:	bb 27       	eor	r27, r27
     b5e:	93 95       	inc	r25
     b60:	f6 95       	lsr	r31
     b62:	87 95       	ror	r24
     b64:	77 95       	ror	r23
     b66:	67 95       	ror	r22
     b68:	b7 95       	ror	r27
     b6a:	f1 11       	cpse	r31, r1
     b6c:	f8 cf       	rjmp	.-16     	; 0xb5e <__floatsisf+0x1c>
     b6e:	fa f4       	brpl	.+62     	; 0xbae <__floatsisf+0x6c>
     b70:	bb 0f       	add	r27, r27
     b72:	11 f4       	brne	.+4      	; 0xb78 <__floatsisf+0x36>
     b74:	60 ff       	sbrs	r22, 0
     b76:	1b c0       	rjmp	.+54     	; 0xbae <__floatsisf+0x6c>
     b78:	6f 5f       	subi	r22, 0xFF	; 255
     b7a:	7f 4f       	sbci	r23, 0xFF	; 255
     b7c:	8f 4f       	sbci	r24, 0xFF	; 255
     b7e:	9f 4f       	sbci	r25, 0xFF	; 255
     b80:	16 c0       	rjmp	.+44     	; 0xbae <__floatsisf+0x6c>
     b82:	88 23       	and	r24, r24
     b84:	11 f0       	breq	.+4      	; 0xb8a <__floatsisf+0x48>
     b86:	96 e9       	ldi	r25, 0x96	; 150
     b88:	11 c0       	rjmp	.+34     	; 0xbac <__floatsisf+0x6a>
     b8a:	77 23       	and	r23, r23
     b8c:	21 f0       	breq	.+8      	; 0xb96 <__floatsisf+0x54>
     b8e:	9e e8       	ldi	r25, 0x8E	; 142
     b90:	87 2f       	mov	r24, r23
     b92:	76 2f       	mov	r23, r22
     b94:	05 c0       	rjmp	.+10     	; 0xba0 <__floatsisf+0x5e>
     b96:	66 23       	and	r22, r22
     b98:	71 f0       	breq	.+28     	; 0xbb6 <__floatsisf+0x74>
     b9a:	96 e8       	ldi	r25, 0x86	; 134
     b9c:	86 2f       	mov	r24, r22
     b9e:	70 e0       	ldi	r23, 0x00	; 0
     ba0:	60 e0       	ldi	r22, 0x00	; 0
     ba2:	2a f0       	brmi	.+10     	; 0xbae <__floatsisf+0x6c>
     ba4:	9a 95       	dec	r25
     ba6:	66 0f       	add	r22, r22
     ba8:	77 1f       	adc	r23, r23
     baa:	88 1f       	adc	r24, r24
     bac:	da f7       	brpl	.-10     	; 0xba4 <__floatsisf+0x62>
     bae:	88 0f       	add	r24, r24
     bb0:	96 95       	lsr	r25
     bb2:	87 95       	ror	r24
     bb4:	97 f9       	bld	r25, 7
     bb6:	08 95       	ret

00000bb8 <__fp_cmp>:
     bb8:	99 0f       	add	r25, r25
     bba:	00 08       	sbc	r0, r0
     bbc:	55 0f       	add	r21, r21
     bbe:	aa 0b       	sbc	r26, r26
     bc0:	e0 e8       	ldi	r30, 0x80	; 128
     bc2:	fe ef       	ldi	r31, 0xFE	; 254
     bc4:	16 16       	cp	r1, r22
     bc6:	17 06       	cpc	r1, r23
     bc8:	e8 07       	cpc	r30, r24
     bca:	f9 07       	cpc	r31, r25
     bcc:	c0 f0       	brcs	.+48     	; 0xbfe <__fp_cmp+0x46>
     bce:	12 16       	cp	r1, r18
     bd0:	13 06       	cpc	r1, r19
     bd2:	e4 07       	cpc	r30, r20
     bd4:	f5 07       	cpc	r31, r21
     bd6:	98 f0       	brcs	.+38     	; 0xbfe <__fp_cmp+0x46>
     bd8:	62 1b       	sub	r22, r18
     bda:	73 0b       	sbc	r23, r19
     bdc:	84 0b       	sbc	r24, r20
     bde:	95 0b       	sbc	r25, r21
     be0:	39 f4       	brne	.+14     	; 0xbf0 <__fp_cmp+0x38>
     be2:	0a 26       	eor	r0, r26
     be4:	61 f0       	breq	.+24     	; 0xbfe <__fp_cmp+0x46>
     be6:	23 2b       	or	r18, r19
     be8:	24 2b       	or	r18, r20
     bea:	25 2b       	or	r18, r21
     bec:	21 f4       	brne	.+8      	; 0xbf6 <__fp_cmp+0x3e>
     bee:	08 95       	ret
     bf0:	0a 26       	eor	r0, r26
     bf2:	09 f4       	brne	.+2      	; 0xbf6 <__fp_cmp+0x3e>
     bf4:	a1 40       	sbci	r26, 0x01	; 1
     bf6:	a6 95       	lsr	r26
     bf8:	8f ef       	ldi	r24, 0xFF	; 255
     bfa:	81 1d       	adc	r24, r1
     bfc:	81 1d       	adc	r24, r1
     bfe:	08 95       	ret

00000c00 <__fp_inf>:
     c00:	97 f9       	bld	r25, 7
     c02:	9f 67       	ori	r25, 0x7F	; 127
     c04:	80 e8       	ldi	r24, 0x80	; 128
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	60 e0       	ldi	r22, 0x00	; 0
     c0a:	08 95       	ret

00000c0c <__fp_nan>:
     c0c:	9f ef       	ldi	r25, 0xFF	; 255
     c0e:	80 ec       	ldi	r24, 0xC0	; 192
     c10:	08 95       	ret

00000c12 <__fp_pscA>:
     c12:	00 24       	eor	r0, r0
     c14:	0a 94       	dec	r0
     c16:	16 16       	cp	r1, r22
     c18:	17 06       	cpc	r1, r23
     c1a:	18 06       	cpc	r1, r24
     c1c:	09 06       	cpc	r0, r25
     c1e:	08 95       	ret

00000c20 <__fp_pscB>:
     c20:	00 24       	eor	r0, r0
     c22:	0a 94       	dec	r0
     c24:	12 16       	cp	r1, r18
     c26:	13 06       	cpc	r1, r19
     c28:	14 06       	cpc	r1, r20
     c2a:	05 06       	cpc	r0, r21
     c2c:	08 95       	ret

00000c2e <__fp_round>:
     c2e:	09 2e       	mov	r0, r25
     c30:	03 94       	inc	r0
     c32:	00 0c       	add	r0, r0
     c34:	11 f4       	brne	.+4      	; 0xc3a <__fp_round+0xc>
     c36:	88 23       	and	r24, r24
     c38:	52 f0       	brmi	.+20     	; 0xc4e <__fp_round+0x20>
     c3a:	bb 0f       	add	r27, r27
     c3c:	40 f4       	brcc	.+16     	; 0xc4e <__fp_round+0x20>
     c3e:	bf 2b       	or	r27, r31
     c40:	11 f4       	brne	.+4      	; 0xc46 <__fp_round+0x18>
     c42:	60 ff       	sbrs	r22, 0
     c44:	04 c0       	rjmp	.+8      	; 0xc4e <__fp_round+0x20>
     c46:	6f 5f       	subi	r22, 0xFF	; 255
     c48:	7f 4f       	sbci	r23, 0xFF	; 255
     c4a:	8f 4f       	sbci	r24, 0xFF	; 255
     c4c:	9f 4f       	sbci	r25, 0xFF	; 255
     c4e:	08 95       	ret

00000c50 <__fp_split3>:
     c50:	57 fd       	sbrc	r21, 7
     c52:	90 58       	subi	r25, 0x80	; 128
     c54:	44 0f       	add	r20, r20
     c56:	55 1f       	adc	r21, r21
     c58:	59 f0       	breq	.+22     	; 0xc70 <__fp_splitA+0x10>
     c5a:	5f 3f       	cpi	r21, 0xFF	; 255
     c5c:	71 f0       	breq	.+28     	; 0xc7a <__fp_splitA+0x1a>
     c5e:	47 95       	ror	r20

00000c60 <__fp_splitA>:
     c60:	88 0f       	add	r24, r24
     c62:	97 fb       	bst	r25, 7
     c64:	99 1f       	adc	r25, r25
     c66:	61 f0       	breq	.+24     	; 0xc80 <__fp_splitA+0x20>
     c68:	9f 3f       	cpi	r25, 0xFF	; 255
     c6a:	79 f0       	breq	.+30     	; 0xc8a <__fp_splitA+0x2a>
     c6c:	87 95       	ror	r24
     c6e:	08 95       	ret
     c70:	12 16       	cp	r1, r18
     c72:	13 06       	cpc	r1, r19
     c74:	14 06       	cpc	r1, r20
     c76:	55 1f       	adc	r21, r21
     c78:	f2 cf       	rjmp	.-28     	; 0xc5e <__fp_split3+0xe>
     c7a:	46 95       	lsr	r20
     c7c:	f1 df       	rcall	.-30     	; 0xc60 <__fp_splitA>
     c7e:	08 c0       	rjmp	.+16     	; 0xc90 <__fp_splitA+0x30>
     c80:	16 16       	cp	r1, r22
     c82:	17 06       	cpc	r1, r23
     c84:	18 06       	cpc	r1, r24
     c86:	99 1f       	adc	r25, r25
     c88:	f1 cf       	rjmp	.-30     	; 0xc6c <__fp_splitA+0xc>
     c8a:	86 95       	lsr	r24
     c8c:	71 05       	cpc	r23, r1
     c8e:	61 05       	cpc	r22, r1
     c90:	08 94       	sec
     c92:	08 95       	ret

00000c94 <__fp_zero>:
     c94:	e8 94       	clt

00000c96 <__fp_szero>:
     c96:	bb 27       	eor	r27, r27
     c98:	66 27       	eor	r22, r22
     c9a:	77 27       	eor	r23, r23
     c9c:	cb 01       	movw	r24, r22
     c9e:	97 f9       	bld	r25, 7
     ca0:	08 95       	ret

00000ca2 <__gesf2>:
     ca2:	8a df       	rcall	.-236    	; 0xbb8 <__fp_cmp>
     ca4:	08 f4       	brcc	.+2      	; 0xca8 <__gesf2+0x6>
     ca6:	8f ef       	ldi	r24, 0xFF	; 255
     ca8:	08 95       	ret

00000caa <__mulsf3>:
     caa:	0b d0       	rcall	.+22     	; 0xcc2 <__mulsf3x>
     cac:	c0 cf       	rjmp	.-128    	; 0xc2e <__fp_round>
     cae:	b1 df       	rcall	.-158    	; 0xc12 <__fp_pscA>
     cb0:	28 f0       	brcs	.+10     	; 0xcbc <__mulsf3+0x12>
     cb2:	b6 df       	rcall	.-148    	; 0xc20 <__fp_pscB>
     cb4:	18 f0       	brcs	.+6      	; 0xcbc <__mulsf3+0x12>
     cb6:	95 23       	and	r25, r21
     cb8:	09 f0       	breq	.+2      	; 0xcbc <__mulsf3+0x12>
     cba:	a2 cf       	rjmp	.-188    	; 0xc00 <__fp_inf>
     cbc:	a7 cf       	rjmp	.-178    	; 0xc0c <__fp_nan>
     cbe:	11 24       	eor	r1, r1
     cc0:	ea cf       	rjmp	.-44     	; 0xc96 <__fp_szero>

00000cc2 <__mulsf3x>:
     cc2:	c6 df       	rcall	.-116    	; 0xc50 <__fp_split3>
     cc4:	a0 f3       	brcs	.-24     	; 0xcae <__mulsf3+0x4>

00000cc6 <__mulsf3_pse>:
     cc6:	95 9f       	mul	r25, r21
     cc8:	d1 f3       	breq	.-12     	; 0xcbe <__mulsf3+0x14>
     cca:	95 0f       	add	r25, r21
     ccc:	50 e0       	ldi	r21, 0x00	; 0
     cce:	55 1f       	adc	r21, r21
     cd0:	62 9f       	mul	r22, r18
     cd2:	f0 01       	movw	r30, r0
     cd4:	72 9f       	mul	r23, r18
     cd6:	bb 27       	eor	r27, r27
     cd8:	f0 0d       	add	r31, r0
     cda:	b1 1d       	adc	r27, r1
     cdc:	63 9f       	mul	r22, r19
     cde:	aa 27       	eor	r26, r26
     ce0:	f0 0d       	add	r31, r0
     ce2:	b1 1d       	adc	r27, r1
     ce4:	aa 1f       	adc	r26, r26
     ce6:	64 9f       	mul	r22, r20
     ce8:	66 27       	eor	r22, r22
     cea:	b0 0d       	add	r27, r0
     cec:	a1 1d       	adc	r26, r1
     cee:	66 1f       	adc	r22, r22
     cf0:	82 9f       	mul	r24, r18
     cf2:	22 27       	eor	r18, r18
     cf4:	b0 0d       	add	r27, r0
     cf6:	a1 1d       	adc	r26, r1
     cf8:	62 1f       	adc	r22, r18
     cfa:	73 9f       	mul	r23, r19
     cfc:	b0 0d       	add	r27, r0
     cfe:	a1 1d       	adc	r26, r1
     d00:	62 1f       	adc	r22, r18
     d02:	83 9f       	mul	r24, r19
     d04:	a0 0d       	add	r26, r0
     d06:	61 1d       	adc	r22, r1
     d08:	22 1f       	adc	r18, r18
     d0a:	74 9f       	mul	r23, r20
     d0c:	33 27       	eor	r19, r19
     d0e:	a0 0d       	add	r26, r0
     d10:	61 1d       	adc	r22, r1
     d12:	23 1f       	adc	r18, r19
     d14:	84 9f       	mul	r24, r20
     d16:	60 0d       	add	r22, r0
     d18:	21 1d       	adc	r18, r1
     d1a:	82 2f       	mov	r24, r18
     d1c:	76 2f       	mov	r23, r22
     d1e:	6a 2f       	mov	r22, r26
     d20:	11 24       	eor	r1, r1
     d22:	9f 57       	subi	r25, 0x7F	; 127
     d24:	50 40       	sbci	r21, 0x00	; 0
     d26:	8a f0       	brmi	.+34     	; 0xd4a <__mulsf3_pse+0x84>
     d28:	e1 f0       	breq	.+56     	; 0xd62 <__mulsf3_pse+0x9c>
     d2a:	88 23       	and	r24, r24
     d2c:	4a f0       	brmi	.+18     	; 0xd40 <__mulsf3_pse+0x7a>
     d2e:	ee 0f       	add	r30, r30
     d30:	ff 1f       	adc	r31, r31
     d32:	bb 1f       	adc	r27, r27
     d34:	66 1f       	adc	r22, r22
     d36:	77 1f       	adc	r23, r23
     d38:	88 1f       	adc	r24, r24
     d3a:	91 50       	subi	r25, 0x01	; 1
     d3c:	50 40       	sbci	r21, 0x00	; 0
     d3e:	a9 f7       	brne	.-22     	; 0xd2a <__mulsf3_pse+0x64>
     d40:	9e 3f       	cpi	r25, 0xFE	; 254
     d42:	51 05       	cpc	r21, r1
     d44:	70 f0       	brcs	.+28     	; 0xd62 <__mulsf3_pse+0x9c>
     d46:	5c cf       	rjmp	.-328    	; 0xc00 <__fp_inf>
     d48:	a6 cf       	rjmp	.-180    	; 0xc96 <__fp_szero>
     d4a:	5f 3f       	cpi	r21, 0xFF	; 255
     d4c:	ec f3       	brlt	.-6      	; 0xd48 <__mulsf3_pse+0x82>
     d4e:	98 3e       	cpi	r25, 0xE8	; 232
     d50:	dc f3       	brlt	.-10     	; 0xd48 <__mulsf3_pse+0x82>
     d52:	86 95       	lsr	r24
     d54:	77 95       	ror	r23
     d56:	67 95       	ror	r22
     d58:	b7 95       	ror	r27
     d5a:	f7 95       	ror	r31
     d5c:	e7 95       	ror	r30
     d5e:	9f 5f       	subi	r25, 0xFF	; 255
     d60:	c1 f7       	brne	.-16     	; 0xd52 <__mulsf3_pse+0x8c>
     d62:	fe 2b       	or	r31, r30
     d64:	88 0f       	add	r24, r24
     d66:	91 1d       	adc	r25, r1
     d68:	96 95       	lsr	r25
     d6a:	87 95       	ror	r24
     d6c:	97 f9       	bld	r25, 7
     d6e:	08 95       	ret

00000d70 <__tablejump2__>:
     d70:	ee 0f       	add	r30, r30
     d72:	ff 1f       	adc	r31, r31

00000d74 <__tablejump__>:
     d74:	05 90       	lpm	r0, Z+
     d76:	f4 91       	lpm	r31, Z
     d78:	e0 2d       	mov	r30, r0
     d7a:	19 94       	eijmp

00000d7c <fdevopen>:
     d7c:	0f 93       	push	r16
     d7e:	1f 93       	push	r17
     d80:	cf 93       	push	r28
     d82:	df 93       	push	r29
     d84:	ec 01       	movw	r28, r24
     d86:	8b 01       	movw	r16, r22
     d88:	00 97       	sbiw	r24, 0x00	; 0
     d8a:	31 f4       	brne	.+12     	; 0xd98 <fdevopen+0x1c>
     d8c:	61 15       	cp	r22, r1
     d8e:	71 05       	cpc	r23, r1
     d90:	19 f4       	brne	.+6      	; 0xd98 <fdevopen+0x1c>
     d92:	80 e0       	ldi	r24, 0x00	; 0
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	37 c0       	rjmp	.+110    	; 0xe06 <fdevopen+0x8a>
     d98:	6e e0       	ldi	r22, 0x0E	; 14
     d9a:	70 e0       	ldi	r23, 0x00	; 0
     d9c:	81 e0       	ldi	r24, 0x01	; 1
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	63 d2       	rcall	.+1222   	; 0x1268 <calloc>
     da2:	fc 01       	movw	r30, r24
     da4:	00 97       	sbiw	r24, 0x00	; 0
     da6:	a9 f3       	breq	.-22     	; 0xd92 <fdevopen+0x16>
     da8:	80 e8       	ldi	r24, 0x80	; 128
     daa:	83 83       	std	Z+3, r24	; 0x03
     dac:	01 15       	cp	r16, r1
     dae:	11 05       	cpc	r17, r1
     db0:	71 f0       	breq	.+28     	; 0xdce <fdevopen+0x52>
     db2:	13 87       	std	Z+11, r17	; 0x0b
     db4:	02 87       	std	Z+10, r16	; 0x0a
     db6:	81 e8       	ldi	r24, 0x81	; 129
     db8:	83 83       	std	Z+3, r24	; 0x03
     dba:	80 91 f5 02 	lds	r24, 0x02F5
     dbe:	90 91 f6 02 	lds	r25, 0x02F6
     dc2:	89 2b       	or	r24, r25
     dc4:	21 f4       	brne	.+8      	; 0xdce <fdevopen+0x52>
     dc6:	f0 93 f6 02 	sts	0x02F6, r31
     dca:	e0 93 f5 02 	sts	0x02F5, r30
     dce:	20 97       	sbiw	r28, 0x00	; 0
     dd0:	c9 f0       	breq	.+50     	; 0xe04 <fdevopen+0x88>
     dd2:	d1 87       	std	Z+9, r29	; 0x09
     dd4:	c0 87       	std	Z+8, r28	; 0x08
     dd6:	83 81       	ldd	r24, Z+3	; 0x03
     dd8:	82 60       	ori	r24, 0x02	; 2
     dda:	83 83       	std	Z+3, r24	; 0x03
     ddc:	80 91 f7 02 	lds	r24, 0x02F7
     de0:	90 91 f8 02 	lds	r25, 0x02F8
     de4:	89 2b       	or	r24, r25
     de6:	71 f4       	brne	.+28     	; 0xe04 <fdevopen+0x88>
     de8:	f0 93 f8 02 	sts	0x02F8, r31
     dec:	e0 93 f7 02 	sts	0x02F7, r30
     df0:	80 91 f9 02 	lds	r24, 0x02F9
     df4:	90 91 fa 02 	lds	r25, 0x02FA
     df8:	89 2b       	or	r24, r25
     dfa:	21 f4       	brne	.+8      	; 0xe04 <fdevopen+0x88>
     dfc:	f0 93 fa 02 	sts	0x02FA, r31
     e00:	e0 93 f9 02 	sts	0x02F9, r30
     e04:	cf 01       	movw	r24, r30
     e06:	df 91       	pop	r29
     e08:	cf 91       	pop	r28
     e0a:	1f 91       	pop	r17
     e0c:	0f 91       	pop	r16
     e0e:	08 95       	ret

00000e10 <printf>:
     e10:	cf 93       	push	r28
     e12:	df 93       	push	r29
     e14:	cd b7       	in	r28, 0x3d	; 61
     e16:	de b7       	in	r29, 0x3e	; 62
     e18:	fe 01       	movw	r30, r28
     e1a:	36 96       	adiw	r30, 0x06	; 6
     e1c:	61 91       	ld	r22, Z+
     e1e:	71 91       	ld	r23, Z+
     e20:	af 01       	movw	r20, r30
     e22:	80 91 f7 02 	lds	r24, 0x02F7
     e26:	90 91 f8 02 	lds	r25, 0x02F8
     e2a:	30 d0       	rcall	.+96     	; 0xe8c <vfprintf>
     e2c:	df 91       	pop	r29
     e2e:	cf 91       	pop	r28
     e30:	08 95       	ret

00000e32 <puts>:
     e32:	0f 93       	push	r16
     e34:	1f 93       	push	r17
     e36:	cf 93       	push	r28
     e38:	df 93       	push	r29
     e3a:	e0 91 f7 02 	lds	r30, 0x02F7
     e3e:	f0 91 f8 02 	lds	r31, 0x02F8
     e42:	23 81       	ldd	r18, Z+3	; 0x03
     e44:	21 ff       	sbrs	r18, 1
     e46:	1b c0       	rjmp	.+54     	; 0xe7e <puts+0x4c>
     e48:	ec 01       	movw	r28, r24
     e4a:	00 e0       	ldi	r16, 0x00	; 0
     e4c:	10 e0       	ldi	r17, 0x00	; 0
     e4e:	89 91       	ld	r24, Y+
     e50:	60 91 f7 02 	lds	r22, 0x02F7
     e54:	70 91 f8 02 	lds	r23, 0x02F8
     e58:	db 01       	movw	r26, r22
     e5a:	18 96       	adiw	r26, 0x08	; 8
     e5c:	ed 91       	ld	r30, X+
     e5e:	fc 91       	ld	r31, X
     e60:	19 97       	sbiw	r26, 0x09	; 9
     e62:	88 23       	and	r24, r24
     e64:	31 f0       	breq	.+12     	; 0xe72 <puts+0x40>
     e66:	19 95       	eicall
     e68:	89 2b       	or	r24, r25
     e6a:	89 f3       	breq	.-30     	; 0xe4e <puts+0x1c>
     e6c:	0f ef       	ldi	r16, 0xFF	; 255
     e6e:	1f ef       	ldi	r17, 0xFF	; 255
     e70:	ee cf       	rjmp	.-36     	; 0xe4e <puts+0x1c>
     e72:	8a e0       	ldi	r24, 0x0A	; 10
     e74:	19 95       	eicall
     e76:	89 2b       	or	r24, r25
     e78:	11 f4       	brne	.+4      	; 0xe7e <puts+0x4c>
     e7a:	c8 01       	movw	r24, r16
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <puts+0x50>
     e7e:	8f ef       	ldi	r24, 0xFF	; 255
     e80:	9f ef       	ldi	r25, 0xFF	; 255
     e82:	df 91       	pop	r29
     e84:	cf 91       	pop	r28
     e86:	1f 91       	pop	r17
     e88:	0f 91       	pop	r16
     e8a:	08 95       	ret

00000e8c <vfprintf>:
     e8c:	2f 92       	push	r2
     e8e:	3f 92       	push	r3
     e90:	4f 92       	push	r4
     e92:	5f 92       	push	r5
     e94:	6f 92       	push	r6
     e96:	7f 92       	push	r7
     e98:	8f 92       	push	r8
     e9a:	9f 92       	push	r9
     e9c:	af 92       	push	r10
     e9e:	bf 92       	push	r11
     ea0:	cf 92       	push	r12
     ea2:	df 92       	push	r13
     ea4:	ef 92       	push	r14
     ea6:	ff 92       	push	r15
     ea8:	0f 93       	push	r16
     eaa:	1f 93       	push	r17
     eac:	cf 93       	push	r28
     eae:	df 93       	push	r29
     eb0:	cd b7       	in	r28, 0x3d	; 61
     eb2:	de b7       	in	r29, 0x3e	; 62
     eb4:	2c 97       	sbiw	r28, 0x0c	; 12
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	f8 94       	cli
     eba:	de bf       	out	0x3e, r29	; 62
     ebc:	0f be       	out	0x3f, r0	; 63
     ebe:	cd bf       	out	0x3d, r28	; 61
     ec0:	7c 01       	movw	r14, r24
     ec2:	6b 01       	movw	r12, r22
     ec4:	8a 01       	movw	r16, r20
     ec6:	fc 01       	movw	r30, r24
     ec8:	17 82       	std	Z+7, r1	; 0x07
     eca:	16 82       	std	Z+6, r1	; 0x06
     ecc:	83 81       	ldd	r24, Z+3	; 0x03
     ece:	81 ff       	sbrs	r24, 1
     ed0:	b0 c1       	rjmp	.+864    	; 0x1232 <vfprintf+0x3a6>
     ed2:	ce 01       	movw	r24, r28
     ed4:	01 96       	adiw	r24, 0x01	; 1
     ed6:	4c 01       	movw	r8, r24
     ed8:	f7 01       	movw	r30, r14
     eda:	93 81       	ldd	r25, Z+3	; 0x03
     edc:	f6 01       	movw	r30, r12
     ede:	93 fd       	sbrc	r25, 3
     ee0:	85 91       	lpm	r24, Z+
     ee2:	93 ff       	sbrs	r25, 3
     ee4:	81 91       	ld	r24, Z+
     ee6:	6f 01       	movw	r12, r30
     ee8:	88 23       	and	r24, r24
     eea:	09 f4       	brne	.+2      	; 0xeee <vfprintf+0x62>
     eec:	9e c1       	rjmp	.+828    	; 0x122a <vfprintf+0x39e>
     eee:	85 32       	cpi	r24, 0x25	; 37
     ef0:	39 f4       	brne	.+14     	; 0xf00 <vfprintf+0x74>
     ef2:	93 fd       	sbrc	r25, 3
     ef4:	85 91       	lpm	r24, Z+
     ef6:	93 ff       	sbrs	r25, 3
     ef8:	81 91       	ld	r24, Z+
     efa:	6f 01       	movw	r12, r30
     efc:	85 32       	cpi	r24, 0x25	; 37
     efe:	21 f4       	brne	.+8      	; 0xf08 <vfprintf+0x7c>
     f00:	b7 01       	movw	r22, r14
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	0f d3       	rcall	.+1566   	; 0x1524 <fputc>
     f06:	e8 cf       	rjmp	.-48     	; 0xed8 <vfprintf+0x4c>
     f08:	51 2c       	mov	r5, r1
     f0a:	31 2c       	mov	r3, r1
     f0c:	20 e0       	ldi	r18, 0x00	; 0
     f0e:	20 32       	cpi	r18, 0x20	; 32
     f10:	a0 f4       	brcc	.+40     	; 0xf3a <vfprintf+0xae>
     f12:	8b 32       	cpi	r24, 0x2B	; 43
     f14:	69 f0       	breq	.+26     	; 0xf30 <vfprintf+0xa4>
     f16:	30 f4       	brcc	.+12     	; 0xf24 <vfprintf+0x98>
     f18:	80 32       	cpi	r24, 0x20	; 32
     f1a:	59 f0       	breq	.+22     	; 0xf32 <vfprintf+0xa6>
     f1c:	83 32       	cpi	r24, 0x23	; 35
     f1e:	69 f4       	brne	.+26     	; 0xf3a <vfprintf+0xae>
     f20:	20 61       	ori	r18, 0x10	; 16
     f22:	2c c0       	rjmp	.+88     	; 0xf7c <vfprintf+0xf0>
     f24:	8d 32       	cpi	r24, 0x2D	; 45
     f26:	39 f0       	breq	.+14     	; 0xf36 <vfprintf+0xaa>
     f28:	80 33       	cpi	r24, 0x30	; 48
     f2a:	39 f4       	brne	.+14     	; 0xf3a <vfprintf+0xae>
     f2c:	21 60       	ori	r18, 0x01	; 1
     f2e:	26 c0       	rjmp	.+76     	; 0xf7c <vfprintf+0xf0>
     f30:	22 60       	ori	r18, 0x02	; 2
     f32:	24 60       	ori	r18, 0x04	; 4
     f34:	23 c0       	rjmp	.+70     	; 0xf7c <vfprintf+0xf0>
     f36:	28 60       	ori	r18, 0x08	; 8
     f38:	21 c0       	rjmp	.+66     	; 0xf7c <vfprintf+0xf0>
     f3a:	27 fd       	sbrc	r18, 7
     f3c:	27 c0       	rjmp	.+78     	; 0xf8c <vfprintf+0x100>
     f3e:	30 ed       	ldi	r19, 0xD0	; 208
     f40:	38 0f       	add	r19, r24
     f42:	3a 30       	cpi	r19, 0x0A	; 10
     f44:	78 f4       	brcc	.+30     	; 0xf64 <vfprintf+0xd8>
     f46:	26 ff       	sbrs	r18, 6
     f48:	06 c0       	rjmp	.+12     	; 0xf56 <vfprintf+0xca>
     f4a:	fa e0       	ldi	r31, 0x0A	; 10
     f4c:	5f 9e       	mul	r5, r31
     f4e:	30 0d       	add	r19, r0
     f50:	11 24       	eor	r1, r1
     f52:	53 2e       	mov	r5, r19
     f54:	13 c0       	rjmp	.+38     	; 0xf7c <vfprintf+0xf0>
     f56:	8a e0       	ldi	r24, 0x0A	; 10
     f58:	38 9e       	mul	r3, r24
     f5a:	30 0d       	add	r19, r0
     f5c:	11 24       	eor	r1, r1
     f5e:	33 2e       	mov	r3, r19
     f60:	20 62       	ori	r18, 0x20	; 32
     f62:	0c c0       	rjmp	.+24     	; 0xf7c <vfprintf+0xf0>
     f64:	8e 32       	cpi	r24, 0x2E	; 46
     f66:	21 f4       	brne	.+8      	; 0xf70 <vfprintf+0xe4>
     f68:	26 fd       	sbrc	r18, 6
     f6a:	5f c1       	rjmp	.+702    	; 0x122a <vfprintf+0x39e>
     f6c:	20 64       	ori	r18, 0x40	; 64
     f6e:	06 c0       	rjmp	.+12     	; 0xf7c <vfprintf+0xf0>
     f70:	8c 36       	cpi	r24, 0x6C	; 108
     f72:	11 f4       	brne	.+4      	; 0xf78 <vfprintf+0xec>
     f74:	20 68       	ori	r18, 0x80	; 128
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <vfprintf+0xf0>
     f78:	88 36       	cpi	r24, 0x68	; 104
     f7a:	41 f4       	brne	.+16     	; 0xf8c <vfprintf+0x100>
     f7c:	f6 01       	movw	r30, r12
     f7e:	93 fd       	sbrc	r25, 3
     f80:	85 91       	lpm	r24, Z+
     f82:	93 ff       	sbrs	r25, 3
     f84:	81 91       	ld	r24, Z+
     f86:	6f 01       	movw	r12, r30
     f88:	81 11       	cpse	r24, r1
     f8a:	c1 cf       	rjmp	.-126    	; 0xf0e <vfprintf+0x82>
     f8c:	98 2f       	mov	r25, r24
     f8e:	9f 7d       	andi	r25, 0xDF	; 223
     f90:	95 54       	subi	r25, 0x45	; 69
     f92:	93 30       	cpi	r25, 0x03	; 3
     f94:	28 f4       	brcc	.+10     	; 0xfa0 <vfprintf+0x114>
     f96:	0c 5f       	subi	r16, 0xFC	; 252
     f98:	1f 4f       	sbci	r17, 0xFF	; 255
     f9a:	ff e3       	ldi	r31, 0x3F	; 63
     f9c:	f9 83       	std	Y+1, r31	; 0x01
     f9e:	0d c0       	rjmp	.+26     	; 0xfba <vfprintf+0x12e>
     fa0:	83 36       	cpi	r24, 0x63	; 99
     fa2:	31 f0       	breq	.+12     	; 0xfb0 <vfprintf+0x124>
     fa4:	83 37       	cpi	r24, 0x73	; 115
     fa6:	71 f0       	breq	.+28     	; 0xfc4 <vfprintf+0x138>
     fa8:	83 35       	cpi	r24, 0x53	; 83
     faa:	09 f0       	breq	.+2      	; 0xfae <vfprintf+0x122>
     fac:	57 c0       	rjmp	.+174    	; 0x105c <vfprintf+0x1d0>
     fae:	21 c0       	rjmp	.+66     	; 0xff2 <vfprintf+0x166>
     fb0:	f8 01       	movw	r30, r16
     fb2:	80 81       	ld	r24, Z
     fb4:	89 83       	std	Y+1, r24	; 0x01
     fb6:	0e 5f       	subi	r16, 0xFE	; 254
     fb8:	1f 4f       	sbci	r17, 0xFF	; 255
     fba:	44 24       	eor	r4, r4
     fbc:	43 94       	inc	r4
     fbe:	51 2c       	mov	r5, r1
     fc0:	54 01       	movw	r10, r8
     fc2:	14 c0       	rjmp	.+40     	; 0xfec <vfprintf+0x160>
     fc4:	38 01       	movw	r6, r16
     fc6:	f2 e0       	ldi	r31, 0x02	; 2
     fc8:	6f 0e       	add	r6, r31
     fca:	71 1c       	adc	r7, r1
     fcc:	f8 01       	movw	r30, r16
     fce:	a0 80       	ld	r10, Z
     fd0:	b1 80       	ldd	r11, Z+1	; 0x01
     fd2:	26 ff       	sbrs	r18, 6
     fd4:	03 c0       	rjmp	.+6      	; 0xfdc <vfprintf+0x150>
     fd6:	65 2d       	mov	r22, r5
     fd8:	70 e0       	ldi	r23, 0x00	; 0
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <vfprintf+0x154>
     fdc:	6f ef       	ldi	r22, 0xFF	; 255
     fde:	7f ef       	ldi	r23, 0xFF	; 255
     fe0:	c5 01       	movw	r24, r10
     fe2:	2c 87       	std	Y+12, r18	; 0x0c
     fe4:	94 d2       	rcall	.+1320   	; 0x150e <strnlen>
     fe6:	2c 01       	movw	r4, r24
     fe8:	83 01       	movw	r16, r6
     fea:	2c 85       	ldd	r18, Y+12	; 0x0c
     fec:	2f 77       	andi	r18, 0x7F	; 127
     fee:	22 2e       	mov	r2, r18
     ff0:	16 c0       	rjmp	.+44     	; 0x101e <vfprintf+0x192>
     ff2:	38 01       	movw	r6, r16
     ff4:	f2 e0       	ldi	r31, 0x02	; 2
     ff6:	6f 0e       	add	r6, r31
     ff8:	71 1c       	adc	r7, r1
     ffa:	f8 01       	movw	r30, r16
     ffc:	a0 80       	ld	r10, Z
     ffe:	b1 80       	ldd	r11, Z+1	; 0x01
    1000:	26 ff       	sbrs	r18, 6
    1002:	03 c0       	rjmp	.+6      	; 0x100a <vfprintf+0x17e>
    1004:	65 2d       	mov	r22, r5
    1006:	70 e0       	ldi	r23, 0x00	; 0
    1008:	02 c0       	rjmp	.+4      	; 0x100e <vfprintf+0x182>
    100a:	6f ef       	ldi	r22, 0xFF	; 255
    100c:	7f ef       	ldi	r23, 0xFF	; 255
    100e:	c5 01       	movw	r24, r10
    1010:	2c 87       	std	Y+12, r18	; 0x0c
    1012:	6b d2       	rcall	.+1238   	; 0x14ea <strnlen_P>
    1014:	2c 01       	movw	r4, r24
    1016:	2c 85       	ldd	r18, Y+12	; 0x0c
    1018:	20 68       	ori	r18, 0x80	; 128
    101a:	22 2e       	mov	r2, r18
    101c:	83 01       	movw	r16, r6
    101e:	23 fc       	sbrc	r2, 3
    1020:	19 c0       	rjmp	.+50     	; 0x1054 <vfprintf+0x1c8>
    1022:	83 2d       	mov	r24, r3
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	48 16       	cp	r4, r24
    1028:	59 06       	cpc	r5, r25
    102a:	a0 f4       	brcc	.+40     	; 0x1054 <vfprintf+0x1c8>
    102c:	b7 01       	movw	r22, r14
    102e:	80 e2       	ldi	r24, 0x20	; 32
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	78 d2       	rcall	.+1264   	; 0x1524 <fputc>
    1034:	3a 94       	dec	r3
    1036:	f5 cf       	rjmp	.-22     	; 0x1022 <vfprintf+0x196>
    1038:	f5 01       	movw	r30, r10
    103a:	27 fc       	sbrc	r2, 7
    103c:	85 91       	lpm	r24, Z+
    103e:	27 fe       	sbrs	r2, 7
    1040:	81 91       	ld	r24, Z+
    1042:	5f 01       	movw	r10, r30
    1044:	b7 01       	movw	r22, r14
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	6d d2       	rcall	.+1242   	; 0x1524 <fputc>
    104a:	31 10       	cpse	r3, r1
    104c:	3a 94       	dec	r3
    104e:	f1 e0       	ldi	r31, 0x01	; 1
    1050:	4f 1a       	sub	r4, r31
    1052:	51 08       	sbc	r5, r1
    1054:	41 14       	cp	r4, r1
    1056:	51 04       	cpc	r5, r1
    1058:	79 f7       	brne	.-34     	; 0x1038 <vfprintf+0x1ac>
    105a:	de c0       	rjmp	.+444    	; 0x1218 <vfprintf+0x38c>
    105c:	84 36       	cpi	r24, 0x64	; 100
    105e:	11 f0       	breq	.+4      	; 0x1064 <vfprintf+0x1d8>
    1060:	89 36       	cpi	r24, 0x69	; 105
    1062:	31 f5       	brne	.+76     	; 0x10b0 <vfprintf+0x224>
    1064:	f8 01       	movw	r30, r16
    1066:	27 ff       	sbrs	r18, 7
    1068:	07 c0       	rjmp	.+14     	; 0x1078 <vfprintf+0x1ec>
    106a:	60 81       	ld	r22, Z
    106c:	71 81       	ldd	r23, Z+1	; 0x01
    106e:	82 81       	ldd	r24, Z+2	; 0x02
    1070:	93 81       	ldd	r25, Z+3	; 0x03
    1072:	0c 5f       	subi	r16, 0xFC	; 252
    1074:	1f 4f       	sbci	r17, 0xFF	; 255
    1076:	08 c0       	rjmp	.+16     	; 0x1088 <vfprintf+0x1fc>
    1078:	60 81       	ld	r22, Z
    107a:	71 81       	ldd	r23, Z+1	; 0x01
    107c:	88 27       	eor	r24, r24
    107e:	77 fd       	sbrc	r23, 7
    1080:	80 95       	com	r24
    1082:	98 2f       	mov	r25, r24
    1084:	0e 5f       	subi	r16, 0xFE	; 254
    1086:	1f 4f       	sbci	r17, 0xFF	; 255
    1088:	2f 76       	andi	r18, 0x6F	; 111
    108a:	b2 2e       	mov	r11, r18
    108c:	97 ff       	sbrs	r25, 7
    108e:	09 c0       	rjmp	.+18     	; 0x10a2 <vfprintf+0x216>
    1090:	90 95       	com	r25
    1092:	80 95       	com	r24
    1094:	70 95       	com	r23
    1096:	61 95       	neg	r22
    1098:	7f 4f       	sbci	r23, 0xFF	; 255
    109a:	8f 4f       	sbci	r24, 0xFF	; 255
    109c:	9f 4f       	sbci	r25, 0xFF	; 255
    109e:	20 68       	ori	r18, 0x80	; 128
    10a0:	b2 2e       	mov	r11, r18
    10a2:	2a e0       	ldi	r18, 0x0A	; 10
    10a4:	30 e0       	ldi	r19, 0x00	; 0
    10a6:	a4 01       	movw	r20, r8
    10a8:	6f d2       	rcall	.+1246   	; 0x1588 <__ultoa_invert>
    10aa:	a8 2e       	mov	r10, r24
    10ac:	a8 18       	sub	r10, r8
    10ae:	43 c0       	rjmp	.+134    	; 0x1136 <vfprintf+0x2aa>
    10b0:	85 37       	cpi	r24, 0x75	; 117
    10b2:	29 f4       	brne	.+10     	; 0x10be <vfprintf+0x232>
    10b4:	2f 7e       	andi	r18, 0xEF	; 239
    10b6:	b2 2e       	mov	r11, r18
    10b8:	2a e0       	ldi	r18, 0x0A	; 10
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	25 c0       	rjmp	.+74     	; 0x1108 <vfprintf+0x27c>
    10be:	f2 2f       	mov	r31, r18
    10c0:	f9 7f       	andi	r31, 0xF9	; 249
    10c2:	bf 2e       	mov	r11, r31
    10c4:	8f 36       	cpi	r24, 0x6F	; 111
    10c6:	c1 f0       	breq	.+48     	; 0x10f8 <vfprintf+0x26c>
    10c8:	18 f4       	brcc	.+6      	; 0x10d0 <vfprintf+0x244>
    10ca:	88 35       	cpi	r24, 0x58	; 88
    10cc:	79 f0       	breq	.+30     	; 0x10ec <vfprintf+0x260>
    10ce:	ad c0       	rjmp	.+346    	; 0x122a <vfprintf+0x39e>
    10d0:	80 37       	cpi	r24, 0x70	; 112
    10d2:	19 f0       	breq	.+6      	; 0x10da <vfprintf+0x24e>
    10d4:	88 37       	cpi	r24, 0x78	; 120
    10d6:	21 f0       	breq	.+8      	; 0x10e0 <vfprintf+0x254>
    10d8:	a8 c0       	rjmp	.+336    	; 0x122a <vfprintf+0x39e>
    10da:	2f 2f       	mov	r18, r31
    10dc:	20 61       	ori	r18, 0x10	; 16
    10de:	b2 2e       	mov	r11, r18
    10e0:	b4 fe       	sbrs	r11, 4
    10e2:	0d c0       	rjmp	.+26     	; 0x10fe <vfprintf+0x272>
    10e4:	8b 2d       	mov	r24, r11
    10e6:	84 60       	ori	r24, 0x04	; 4
    10e8:	b8 2e       	mov	r11, r24
    10ea:	09 c0       	rjmp	.+18     	; 0x10fe <vfprintf+0x272>
    10ec:	24 ff       	sbrs	r18, 4
    10ee:	0a c0       	rjmp	.+20     	; 0x1104 <vfprintf+0x278>
    10f0:	9f 2f       	mov	r25, r31
    10f2:	96 60       	ori	r25, 0x06	; 6
    10f4:	b9 2e       	mov	r11, r25
    10f6:	06 c0       	rjmp	.+12     	; 0x1104 <vfprintf+0x278>
    10f8:	28 e0       	ldi	r18, 0x08	; 8
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	05 c0       	rjmp	.+10     	; 0x1108 <vfprintf+0x27c>
    10fe:	20 e1       	ldi	r18, 0x10	; 16
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	02 c0       	rjmp	.+4      	; 0x1108 <vfprintf+0x27c>
    1104:	20 e1       	ldi	r18, 0x10	; 16
    1106:	32 e0       	ldi	r19, 0x02	; 2
    1108:	f8 01       	movw	r30, r16
    110a:	b7 fe       	sbrs	r11, 7
    110c:	07 c0       	rjmp	.+14     	; 0x111c <vfprintf+0x290>
    110e:	60 81       	ld	r22, Z
    1110:	71 81       	ldd	r23, Z+1	; 0x01
    1112:	82 81       	ldd	r24, Z+2	; 0x02
    1114:	93 81       	ldd	r25, Z+3	; 0x03
    1116:	0c 5f       	subi	r16, 0xFC	; 252
    1118:	1f 4f       	sbci	r17, 0xFF	; 255
    111a:	06 c0       	rjmp	.+12     	; 0x1128 <vfprintf+0x29c>
    111c:	60 81       	ld	r22, Z
    111e:	71 81       	ldd	r23, Z+1	; 0x01
    1120:	80 e0       	ldi	r24, 0x00	; 0
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	0e 5f       	subi	r16, 0xFE	; 254
    1126:	1f 4f       	sbci	r17, 0xFF	; 255
    1128:	a4 01       	movw	r20, r8
    112a:	2e d2       	rcall	.+1116   	; 0x1588 <__ultoa_invert>
    112c:	a8 2e       	mov	r10, r24
    112e:	a8 18       	sub	r10, r8
    1130:	fb 2d       	mov	r31, r11
    1132:	ff 77       	andi	r31, 0x7F	; 127
    1134:	bf 2e       	mov	r11, r31
    1136:	b6 fe       	sbrs	r11, 6
    1138:	0b c0       	rjmp	.+22     	; 0x1150 <vfprintf+0x2c4>
    113a:	2b 2d       	mov	r18, r11
    113c:	2e 7f       	andi	r18, 0xFE	; 254
    113e:	a5 14       	cp	r10, r5
    1140:	50 f4       	brcc	.+20     	; 0x1156 <vfprintf+0x2ca>
    1142:	b4 fe       	sbrs	r11, 4
    1144:	0a c0       	rjmp	.+20     	; 0x115a <vfprintf+0x2ce>
    1146:	b2 fc       	sbrc	r11, 2
    1148:	08 c0       	rjmp	.+16     	; 0x115a <vfprintf+0x2ce>
    114a:	2b 2d       	mov	r18, r11
    114c:	2e 7e       	andi	r18, 0xEE	; 238
    114e:	05 c0       	rjmp	.+10     	; 0x115a <vfprintf+0x2ce>
    1150:	7a 2c       	mov	r7, r10
    1152:	2b 2d       	mov	r18, r11
    1154:	03 c0       	rjmp	.+6      	; 0x115c <vfprintf+0x2d0>
    1156:	7a 2c       	mov	r7, r10
    1158:	01 c0       	rjmp	.+2      	; 0x115c <vfprintf+0x2d0>
    115a:	75 2c       	mov	r7, r5
    115c:	24 ff       	sbrs	r18, 4
    115e:	0d c0       	rjmp	.+26     	; 0x117a <vfprintf+0x2ee>
    1160:	fe 01       	movw	r30, r28
    1162:	ea 0d       	add	r30, r10
    1164:	f1 1d       	adc	r31, r1
    1166:	80 81       	ld	r24, Z
    1168:	80 33       	cpi	r24, 0x30	; 48
    116a:	11 f4       	brne	.+4      	; 0x1170 <vfprintf+0x2e4>
    116c:	29 7e       	andi	r18, 0xE9	; 233
    116e:	09 c0       	rjmp	.+18     	; 0x1182 <vfprintf+0x2f6>
    1170:	22 ff       	sbrs	r18, 2
    1172:	06 c0       	rjmp	.+12     	; 0x1180 <vfprintf+0x2f4>
    1174:	73 94       	inc	r7
    1176:	73 94       	inc	r7
    1178:	04 c0       	rjmp	.+8      	; 0x1182 <vfprintf+0x2f6>
    117a:	82 2f       	mov	r24, r18
    117c:	86 78       	andi	r24, 0x86	; 134
    117e:	09 f0       	breq	.+2      	; 0x1182 <vfprintf+0x2f6>
    1180:	73 94       	inc	r7
    1182:	23 fd       	sbrc	r18, 3
    1184:	12 c0       	rjmp	.+36     	; 0x11aa <vfprintf+0x31e>
    1186:	20 ff       	sbrs	r18, 0
    1188:	06 c0       	rjmp	.+12     	; 0x1196 <vfprintf+0x30a>
    118a:	5a 2c       	mov	r5, r10
    118c:	73 14       	cp	r7, r3
    118e:	18 f4       	brcc	.+6      	; 0x1196 <vfprintf+0x30a>
    1190:	53 0c       	add	r5, r3
    1192:	57 18       	sub	r5, r7
    1194:	73 2c       	mov	r7, r3
    1196:	73 14       	cp	r7, r3
    1198:	60 f4       	brcc	.+24     	; 0x11b2 <vfprintf+0x326>
    119a:	b7 01       	movw	r22, r14
    119c:	80 e2       	ldi	r24, 0x20	; 32
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	2c 87       	std	Y+12, r18	; 0x0c
    11a2:	c0 d1       	rcall	.+896    	; 0x1524 <fputc>
    11a4:	73 94       	inc	r7
    11a6:	2c 85       	ldd	r18, Y+12	; 0x0c
    11a8:	f6 cf       	rjmp	.-20     	; 0x1196 <vfprintf+0x30a>
    11aa:	73 14       	cp	r7, r3
    11ac:	10 f4       	brcc	.+4      	; 0x11b2 <vfprintf+0x326>
    11ae:	37 18       	sub	r3, r7
    11b0:	01 c0       	rjmp	.+2      	; 0x11b4 <vfprintf+0x328>
    11b2:	31 2c       	mov	r3, r1
    11b4:	24 ff       	sbrs	r18, 4
    11b6:	11 c0       	rjmp	.+34     	; 0x11da <vfprintf+0x34e>
    11b8:	b7 01       	movw	r22, r14
    11ba:	80 e3       	ldi	r24, 0x30	; 48
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	2c 87       	std	Y+12, r18	; 0x0c
    11c0:	b1 d1       	rcall	.+866    	; 0x1524 <fputc>
    11c2:	2c 85       	ldd	r18, Y+12	; 0x0c
    11c4:	22 ff       	sbrs	r18, 2
    11c6:	16 c0       	rjmp	.+44     	; 0x11f4 <vfprintf+0x368>
    11c8:	21 ff       	sbrs	r18, 1
    11ca:	03 c0       	rjmp	.+6      	; 0x11d2 <vfprintf+0x346>
    11cc:	88 e5       	ldi	r24, 0x58	; 88
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	02 c0       	rjmp	.+4      	; 0x11d6 <vfprintf+0x34a>
    11d2:	88 e7       	ldi	r24, 0x78	; 120
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	b7 01       	movw	r22, r14
    11d8:	0c c0       	rjmp	.+24     	; 0x11f2 <vfprintf+0x366>
    11da:	82 2f       	mov	r24, r18
    11dc:	86 78       	andi	r24, 0x86	; 134
    11de:	51 f0       	breq	.+20     	; 0x11f4 <vfprintf+0x368>
    11e0:	21 fd       	sbrc	r18, 1
    11e2:	02 c0       	rjmp	.+4      	; 0x11e8 <vfprintf+0x35c>
    11e4:	80 e2       	ldi	r24, 0x20	; 32
    11e6:	01 c0       	rjmp	.+2      	; 0x11ea <vfprintf+0x35e>
    11e8:	8b e2       	ldi	r24, 0x2B	; 43
    11ea:	27 fd       	sbrc	r18, 7
    11ec:	8d e2       	ldi	r24, 0x2D	; 45
    11ee:	b7 01       	movw	r22, r14
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	98 d1       	rcall	.+816    	; 0x1524 <fputc>
    11f4:	a5 14       	cp	r10, r5
    11f6:	30 f4       	brcc	.+12     	; 0x1204 <vfprintf+0x378>
    11f8:	b7 01       	movw	r22, r14
    11fa:	80 e3       	ldi	r24, 0x30	; 48
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	92 d1       	rcall	.+804    	; 0x1524 <fputc>
    1200:	5a 94       	dec	r5
    1202:	f8 cf       	rjmp	.-16     	; 0x11f4 <vfprintf+0x368>
    1204:	aa 94       	dec	r10
    1206:	f4 01       	movw	r30, r8
    1208:	ea 0d       	add	r30, r10
    120a:	f1 1d       	adc	r31, r1
    120c:	80 81       	ld	r24, Z
    120e:	b7 01       	movw	r22, r14
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	88 d1       	rcall	.+784    	; 0x1524 <fputc>
    1214:	a1 10       	cpse	r10, r1
    1216:	f6 cf       	rjmp	.-20     	; 0x1204 <vfprintf+0x378>
    1218:	33 20       	and	r3, r3
    121a:	09 f4       	brne	.+2      	; 0x121e <vfprintf+0x392>
    121c:	5d ce       	rjmp	.-838    	; 0xed8 <vfprintf+0x4c>
    121e:	b7 01       	movw	r22, r14
    1220:	80 e2       	ldi	r24, 0x20	; 32
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	7f d1       	rcall	.+766    	; 0x1524 <fputc>
    1226:	3a 94       	dec	r3
    1228:	f7 cf       	rjmp	.-18     	; 0x1218 <vfprintf+0x38c>
    122a:	f7 01       	movw	r30, r14
    122c:	86 81       	ldd	r24, Z+6	; 0x06
    122e:	97 81       	ldd	r25, Z+7	; 0x07
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <vfprintf+0x3aa>
    1232:	8f ef       	ldi	r24, 0xFF	; 255
    1234:	9f ef       	ldi	r25, 0xFF	; 255
    1236:	2c 96       	adiw	r28, 0x0c	; 12
    1238:	0f b6       	in	r0, 0x3f	; 63
    123a:	f8 94       	cli
    123c:	de bf       	out	0x3e, r29	; 62
    123e:	0f be       	out	0x3f, r0	; 63
    1240:	cd bf       	out	0x3d, r28	; 61
    1242:	df 91       	pop	r29
    1244:	cf 91       	pop	r28
    1246:	1f 91       	pop	r17
    1248:	0f 91       	pop	r16
    124a:	ff 90       	pop	r15
    124c:	ef 90       	pop	r14
    124e:	df 90       	pop	r13
    1250:	cf 90       	pop	r12
    1252:	bf 90       	pop	r11
    1254:	af 90       	pop	r10
    1256:	9f 90       	pop	r9
    1258:	8f 90       	pop	r8
    125a:	7f 90       	pop	r7
    125c:	6f 90       	pop	r6
    125e:	5f 90       	pop	r5
    1260:	4f 90       	pop	r4
    1262:	3f 90       	pop	r3
    1264:	2f 90       	pop	r2
    1266:	08 95       	ret

00001268 <calloc>:
    1268:	0f 93       	push	r16
    126a:	1f 93       	push	r17
    126c:	cf 93       	push	r28
    126e:	df 93       	push	r29
    1270:	86 9f       	mul	r24, r22
    1272:	80 01       	movw	r16, r0
    1274:	87 9f       	mul	r24, r23
    1276:	10 0d       	add	r17, r0
    1278:	96 9f       	mul	r25, r22
    127a:	10 0d       	add	r17, r0
    127c:	11 24       	eor	r1, r1
    127e:	c8 01       	movw	r24, r16
    1280:	0d d0       	rcall	.+26     	; 0x129c <malloc>
    1282:	ec 01       	movw	r28, r24
    1284:	00 97       	sbiw	r24, 0x00	; 0
    1286:	21 f0       	breq	.+8      	; 0x1290 <calloc+0x28>
    1288:	a8 01       	movw	r20, r16
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	70 e0       	ldi	r23, 0x00	; 0
    128e:	38 d1       	rcall	.+624    	; 0x1500 <memset>
    1290:	ce 01       	movw	r24, r28
    1292:	df 91       	pop	r29
    1294:	cf 91       	pop	r28
    1296:	1f 91       	pop	r17
    1298:	0f 91       	pop	r16
    129a:	08 95       	ret

0000129c <malloc>:
    129c:	cf 93       	push	r28
    129e:	df 93       	push	r29
    12a0:	82 30       	cpi	r24, 0x02	; 2
    12a2:	91 05       	cpc	r25, r1
    12a4:	10 f4       	brcc	.+4      	; 0x12aa <malloc+0xe>
    12a6:	82 e0       	ldi	r24, 0x02	; 2
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	e0 91 fd 02 	lds	r30, 0x02FD
    12ae:	f0 91 fe 02 	lds	r31, 0x02FE
    12b2:	20 e0       	ldi	r18, 0x00	; 0
    12b4:	30 e0       	ldi	r19, 0x00	; 0
    12b6:	a0 e0       	ldi	r26, 0x00	; 0
    12b8:	b0 e0       	ldi	r27, 0x00	; 0
    12ba:	30 97       	sbiw	r30, 0x00	; 0
    12bc:	39 f1       	breq	.+78     	; 0x130c <malloc+0x70>
    12be:	40 81       	ld	r20, Z
    12c0:	51 81       	ldd	r21, Z+1	; 0x01
    12c2:	48 17       	cp	r20, r24
    12c4:	59 07       	cpc	r21, r25
    12c6:	b8 f0       	brcs	.+46     	; 0x12f6 <malloc+0x5a>
    12c8:	48 17       	cp	r20, r24
    12ca:	59 07       	cpc	r21, r25
    12cc:	71 f4       	brne	.+28     	; 0x12ea <malloc+0x4e>
    12ce:	82 81       	ldd	r24, Z+2	; 0x02
    12d0:	93 81       	ldd	r25, Z+3	; 0x03
    12d2:	10 97       	sbiw	r26, 0x00	; 0
    12d4:	29 f0       	breq	.+10     	; 0x12e0 <malloc+0x44>
    12d6:	13 96       	adiw	r26, 0x03	; 3
    12d8:	9c 93       	st	X, r25
    12da:	8e 93       	st	-X, r24
    12dc:	12 97       	sbiw	r26, 0x02	; 2
    12de:	2c c0       	rjmp	.+88     	; 0x1338 <malloc+0x9c>
    12e0:	90 93 fe 02 	sts	0x02FE, r25
    12e4:	80 93 fd 02 	sts	0x02FD, r24
    12e8:	27 c0       	rjmp	.+78     	; 0x1338 <malloc+0x9c>
    12ea:	21 15       	cp	r18, r1
    12ec:	31 05       	cpc	r19, r1
    12ee:	31 f0       	breq	.+12     	; 0x12fc <malloc+0x60>
    12f0:	42 17       	cp	r20, r18
    12f2:	53 07       	cpc	r21, r19
    12f4:	18 f0       	brcs	.+6      	; 0x12fc <malloc+0x60>
    12f6:	a9 01       	movw	r20, r18
    12f8:	db 01       	movw	r26, r22
    12fa:	01 c0       	rjmp	.+2      	; 0x12fe <malloc+0x62>
    12fc:	ef 01       	movw	r28, r30
    12fe:	9a 01       	movw	r18, r20
    1300:	bd 01       	movw	r22, r26
    1302:	df 01       	movw	r26, r30
    1304:	02 80       	ldd	r0, Z+2	; 0x02
    1306:	f3 81       	ldd	r31, Z+3	; 0x03
    1308:	e0 2d       	mov	r30, r0
    130a:	d7 cf       	rjmp	.-82     	; 0x12ba <malloc+0x1e>
    130c:	21 15       	cp	r18, r1
    130e:	31 05       	cpc	r19, r1
    1310:	f9 f0       	breq	.+62     	; 0x1350 <malloc+0xb4>
    1312:	28 1b       	sub	r18, r24
    1314:	39 0b       	sbc	r19, r25
    1316:	24 30       	cpi	r18, 0x04	; 4
    1318:	31 05       	cpc	r19, r1
    131a:	80 f4       	brcc	.+32     	; 0x133c <malloc+0xa0>
    131c:	8a 81       	ldd	r24, Y+2	; 0x02
    131e:	9b 81       	ldd	r25, Y+3	; 0x03
    1320:	61 15       	cp	r22, r1
    1322:	71 05       	cpc	r23, r1
    1324:	21 f0       	breq	.+8      	; 0x132e <malloc+0x92>
    1326:	fb 01       	movw	r30, r22
    1328:	93 83       	std	Z+3, r25	; 0x03
    132a:	82 83       	std	Z+2, r24	; 0x02
    132c:	04 c0       	rjmp	.+8      	; 0x1336 <malloc+0x9a>
    132e:	90 93 fe 02 	sts	0x02FE, r25
    1332:	80 93 fd 02 	sts	0x02FD, r24
    1336:	fe 01       	movw	r30, r28
    1338:	32 96       	adiw	r30, 0x02	; 2
    133a:	44 c0       	rjmp	.+136    	; 0x13c4 <malloc+0x128>
    133c:	fe 01       	movw	r30, r28
    133e:	e2 0f       	add	r30, r18
    1340:	f3 1f       	adc	r31, r19
    1342:	81 93       	st	Z+, r24
    1344:	91 93       	st	Z+, r25
    1346:	22 50       	subi	r18, 0x02	; 2
    1348:	31 09       	sbc	r19, r1
    134a:	39 83       	std	Y+1, r19	; 0x01
    134c:	28 83       	st	Y, r18
    134e:	3a c0       	rjmp	.+116    	; 0x13c4 <malloc+0x128>
    1350:	20 91 fb 02 	lds	r18, 0x02FB
    1354:	30 91 fc 02 	lds	r19, 0x02FC
    1358:	23 2b       	or	r18, r19
    135a:	41 f4       	brne	.+16     	; 0x136c <malloc+0xd0>
    135c:	20 91 02 02 	lds	r18, 0x0202
    1360:	30 91 03 02 	lds	r19, 0x0203
    1364:	30 93 fc 02 	sts	0x02FC, r19
    1368:	20 93 fb 02 	sts	0x02FB, r18
    136c:	20 91 00 02 	lds	r18, 0x0200
    1370:	30 91 01 02 	lds	r19, 0x0201
    1374:	21 15       	cp	r18, r1
    1376:	31 05       	cpc	r19, r1
    1378:	41 f4       	brne	.+16     	; 0x138a <malloc+0xee>
    137a:	2d b7       	in	r18, 0x3d	; 61
    137c:	3e b7       	in	r19, 0x3e	; 62
    137e:	40 91 04 02 	lds	r20, 0x0204
    1382:	50 91 05 02 	lds	r21, 0x0205
    1386:	24 1b       	sub	r18, r20
    1388:	35 0b       	sbc	r19, r21
    138a:	e0 91 fb 02 	lds	r30, 0x02FB
    138e:	f0 91 fc 02 	lds	r31, 0x02FC
    1392:	e2 17       	cp	r30, r18
    1394:	f3 07       	cpc	r31, r19
    1396:	a0 f4       	brcc	.+40     	; 0x13c0 <malloc+0x124>
    1398:	2e 1b       	sub	r18, r30
    139a:	3f 0b       	sbc	r19, r31
    139c:	28 17       	cp	r18, r24
    139e:	39 07       	cpc	r19, r25
    13a0:	78 f0       	brcs	.+30     	; 0x13c0 <malloc+0x124>
    13a2:	ac 01       	movw	r20, r24
    13a4:	4e 5f       	subi	r20, 0xFE	; 254
    13a6:	5f 4f       	sbci	r21, 0xFF	; 255
    13a8:	24 17       	cp	r18, r20
    13aa:	35 07       	cpc	r19, r21
    13ac:	48 f0       	brcs	.+18     	; 0x13c0 <malloc+0x124>
    13ae:	4e 0f       	add	r20, r30
    13b0:	5f 1f       	adc	r21, r31
    13b2:	50 93 fc 02 	sts	0x02FC, r21
    13b6:	40 93 fb 02 	sts	0x02FB, r20
    13ba:	81 93       	st	Z+, r24
    13bc:	91 93       	st	Z+, r25
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <malloc+0x128>
    13c0:	e0 e0       	ldi	r30, 0x00	; 0
    13c2:	f0 e0       	ldi	r31, 0x00	; 0
    13c4:	cf 01       	movw	r24, r30
    13c6:	df 91       	pop	r29
    13c8:	cf 91       	pop	r28
    13ca:	08 95       	ret

000013cc <free>:
    13cc:	cf 93       	push	r28
    13ce:	df 93       	push	r29
    13d0:	00 97       	sbiw	r24, 0x00	; 0
    13d2:	09 f4       	brne	.+2      	; 0x13d6 <free+0xa>
    13d4:	87 c0       	rjmp	.+270    	; 0x14e4 <free+0x118>
    13d6:	fc 01       	movw	r30, r24
    13d8:	32 97       	sbiw	r30, 0x02	; 2
    13da:	13 82       	std	Z+3, r1	; 0x03
    13dc:	12 82       	std	Z+2, r1	; 0x02
    13de:	c0 91 fd 02 	lds	r28, 0x02FD
    13e2:	d0 91 fe 02 	lds	r29, 0x02FE
    13e6:	20 97       	sbiw	r28, 0x00	; 0
    13e8:	81 f4       	brne	.+32     	; 0x140a <free+0x3e>
    13ea:	20 81       	ld	r18, Z
    13ec:	31 81       	ldd	r19, Z+1	; 0x01
    13ee:	28 0f       	add	r18, r24
    13f0:	39 1f       	adc	r19, r25
    13f2:	80 91 fb 02 	lds	r24, 0x02FB
    13f6:	90 91 fc 02 	lds	r25, 0x02FC
    13fa:	82 17       	cp	r24, r18
    13fc:	93 07       	cpc	r25, r19
    13fe:	79 f5       	brne	.+94     	; 0x145e <free+0x92>
    1400:	f0 93 fc 02 	sts	0x02FC, r31
    1404:	e0 93 fb 02 	sts	0x02FB, r30
    1408:	6d c0       	rjmp	.+218    	; 0x14e4 <free+0x118>
    140a:	de 01       	movw	r26, r28
    140c:	20 e0       	ldi	r18, 0x00	; 0
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	ae 17       	cp	r26, r30
    1412:	bf 07       	cpc	r27, r31
    1414:	50 f4       	brcc	.+20     	; 0x142a <free+0x5e>
    1416:	12 96       	adiw	r26, 0x02	; 2
    1418:	4d 91       	ld	r20, X+
    141a:	5c 91       	ld	r21, X
    141c:	13 97       	sbiw	r26, 0x03	; 3
    141e:	9d 01       	movw	r18, r26
    1420:	41 15       	cp	r20, r1
    1422:	51 05       	cpc	r21, r1
    1424:	09 f1       	breq	.+66     	; 0x1468 <free+0x9c>
    1426:	da 01       	movw	r26, r20
    1428:	f3 cf       	rjmp	.-26     	; 0x1410 <free+0x44>
    142a:	b3 83       	std	Z+3, r27	; 0x03
    142c:	a2 83       	std	Z+2, r26	; 0x02
    142e:	40 81       	ld	r20, Z
    1430:	51 81       	ldd	r21, Z+1	; 0x01
    1432:	84 0f       	add	r24, r20
    1434:	95 1f       	adc	r25, r21
    1436:	8a 17       	cp	r24, r26
    1438:	9b 07       	cpc	r25, r27
    143a:	71 f4       	brne	.+28     	; 0x1458 <free+0x8c>
    143c:	8d 91       	ld	r24, X+
    143e:	9c 91       	ld	r25, X
    1440:	11 97       	sbiw	r26, 0x01	; 1
    1442:	84 0f       	add	r24, r20
    1444:	95 1f       	adc	r25, r21
    1446:	02 96       	adiw	r24, 0x02	; 2
    1448:	91 83       	std	Z+1, r25	; 0x01
    144a:	80 83       	st	Z, r24
    144c:	12 96       	adiw	r26, 0x02	; 2
    144e:	8d 91       	ld	r24, X+
    1450:	9c 91       	ld	r25, X
    1452:	13 97       	sbiw	r26, 0x03	; 3
    1454:	93 83       	std	Z+3, r25	; 0x03
    1456:	82 83       	std	Z+2, r24	; 0x02
    1458:	21 15       	cp	r18, r1
    145a:	31 05       	cpc	r19, r1
    145c:	29 f4       	brne	.+10     	; 0x1468 <free+0x9c>
    145e:	f0 93 fe 02 	sts	0x02FE, r31
    1462:	e0 93 fd 02 	sts	0x02FD, r30
    1466:	3e c0       	rjmp	.+124    	; 0x14e4 <free+0x118>
    1468:	d9 01       	movw	r26, r18
    146a:	13 96       	adiw	r26, 0x03	; 3
    146c:	fc 93       	st	X, r31
    146e:	ee 93       	st	-X, r30
    1470:	12 97       	sbiw	r26, 0x02	; 2
    1472:	4d 91       	ld	r20, X+
    1474:	5d 91       	ld	r21, X+
    1476:	a4 0f       	add	r26, r20
    1478:	b5 1f       	adc	r27, r21
    147a:	ea 17       	cp	r30, r26
    147c:	fb 07       	cpc	r31, r27
    147e:	79 f4       	brne	.+30     	; 0x149e <free+0xd2>
    1480:	80 81       	ld	r24, Z
    1482:	91 81       	ldd	r25, Z+1	; 0x01
    1484:	84 0f       	add	r24, r20
    1486:	95 1f       	adc	r25, r21
    1488:	02 96       	adiw	r24, 0x02	; 2
    148a:	d9 01       	movw	r26, r18
    148c:	11 96       	adiw	r26, 0x01	; 1
    148e:	9c 93       	st	X, r25
    1490:	8e 93       	st	-X, r24
    1492:	82 81       	ldd	r24, Z+2	; 0x02
    1494:	93 81       	ldd	r25, Z+3	; 0x03
    1496:	13 96       	adiw	r26, 0x03	; 3
    1498:	9c 93       	st	X, r25
    149a:	8e 93       	st	-X, r24
    149c:	12 97       	sbiw	r26, 0x02	; 2
    149e:	e0 e0       	ldi	r30, 0x00	; 0
    14a0:	f0 e0       	ldi	r31, 0x00	; 0
    14a2:	8a 81       	ldd	r24, Y+2	; 0x02
    14a4:	9b 81       	ldd	r25, Y+3	; 0x03
    14a6:	00 97       	sbiw	r24, 0x00	; 0
    14a8:	19 f0       	breq	.+6      	; 0x14b0 <free+0xe4>
    14aa:	fe 01       	movw	r30, r28
    14ac:	ec 01       	movw	r28, r24
    14ae:	f9 cf       	rjmp	.-14     	; 0x14a2 <free+0xd6>
    14b0:	ce 01       	movw	r24, r28
    14b2:	02 96       	adiw	r24, 0x02	; 2
    14b4:	28 81       	ld	r18, Y
    14b6:	39 81       	ldd	r19, Y+1	; 0x01
    14b8:	82 0f       	add	r24, r18
    14ba:	93 1f       	adc	r25, r19
    14bc:	20 91 fb 02 	lds	r18, 0x02FB
    14c0:	30 91 fc 02 	lds	r19, 0x02FC
    14c4:	28 17       	cp	r18, r24
    14c6:	39 07       	cpc	r19, r25
    14c8:	69 f4       	brne	.+26     	; 0x14e4 <free+0x118>
    14ca:	30 97       	sbiw	r30, 0x00	; 0
    14cc:	29 f4       	brne	.+10     	; 0x14d8 <free+0x10c>
    14ce:	10 92 fe 02 	sts	0x02FE, r1
    14d2:	10 92 fd 02 	sts	0x02FD, r1
    14d6:	02 c0       	rjmp	.+4      	; 0x14dc <free+0x110>
    14d8:	13 82       	std	Z+3, r1	; 0x03
    14da:	12 82       	std	Z+2, r1	; 0x02
    14dc:	d0 93 fc 02 	sts	0x02FC, r29
    14e0:	c0 93 fb 02 	sts	0x02FB, r28
    14e4:	df 91       	pop	r29
    14e6:	cf 91       	pop	r28
    14e8:	08 95       	ret

000014ea <strnlen_P>:
    14ea:	fc 01       	movw	r30, r24
    14ec:	05 90       	lpm	r0, Z+
    14ee:	61 50       	subi	r22, 0x01	; 1
    14f0:	70 40       	sbci	r23, 0x00	; 0
    14f2:	01 10       	cpse	r0, r1
    14f4:	d8 f7       	brcc	.-10     	; 0x14ec <strnlen_P+0x2>
    14f6:	80 95       	com	r24
    14f8:	90 95       	com	r25
    14fa:	8e 0f       	add	r24, r30
    14fc:	9f 1f       	adc	r25, r31
    14fe:	08 95       	ret

00001500 <memset>:
    1500:	dc 01       	movw	r26, r24
    1502:	01 c0       	rjmp	.+2      	; 0x1506 <memset+0x6>
    1504:	6d 93       	st	X+, r22
    1506:	41 50       	subi	r20, 0x01	; 1
    1508:	50 40       	sbci	r21, 0x00	; 0
    150a:	e0 f7       	brcc	.-8      	; 0x1504 <memset+0x4>
    150c:	08 95       	ret

0000150e <strnlen>:
    150e:	fc 01       	movw	r30, r24
    1510:	61 50       	subi	r22, 0x01	; 1
    1512:	70 40       	sbci	r23, 0x00	; 0
    1514:	01 90       	ld	r0, Z+
    1516:	01 10       	cpse	r0, r1
    1518:	d8 f7       	brcc	.-10     	; 0x1510 <strnlen+0x2>
    151a:	80 95       	com	r24
    151c:	90 95       	com	r25
    151e:	8e 0f       	add	r24, r30
    1520:	9f 1f       	adc	r25, r31
    1522:	08 95       	ret

00001524 <fputc>:
    1524:	0f 93       	push	r16
    1526:	1f 93       	push	r17
    1528:	cf 93       	push	r28
    152a:	df 93       	push	r29
    152c:	18 2f       	mov	r17, r24
    152e:	09 2f       	mov	r16, r25
    1530:	eb 01       	movw	r28, r22
    1532:	8b 81       	ldd	r24, Y+3	; 0x03
    1534:	81 fd       	sbrc	r24, 1
    1536:	03 c0       	rjmp	.+6      	; 0x153e <fputc+0x1a>
    1538:	8f ef       	ldi	r24, 0xFF	; 255
    153a:	9f ef       	ldi	r25, 0xFF	; 255
    153c:	20 c0       	rjmp	.+64     	; 0x157e <fputc+0x5a>
    153e:	82 ff       	sbrs	r24, 2
    1540:	10 c0       	rjmp	.+32     	; 0x1562 <fputc+0x3e>
    1542:	4e 81       	ldd	r20, Y+6	; 0x06
    1544:	5f 81       	ldd	r21, Y+7	; 0x07
    1546:	2c 81       	ldd	r18, Y+4	; 0x04
    1548:	3d 81       	ldd	r19, Y+5	; 0x05
    154a:	42 17       	cp	r20, r18
    154c:	53 07       	cpc	r21, r19
    154e:	7c f4       	brge	.+30     	; 0x156e <fputc+0x4a>
    1550:	e8 81       	ld	r30, Y
    1552:	f9 81       	ldd	r31, Y+1	; 0x01
    1554:	9f 01       	movw	r18, r30
    1556:	2f 5f       	subi	r18, 0xFF	; 255
    1558:	3f 4f       	sbci	r19, 0xFF	; 255
    155a:	39 83       	std	Y+1, r19	; 0x01
    155c:	28 83       	st	Y, r18
    155e:	10 83       	st	Z, r17
    1560:	06 c0       	rjmp	.+12     	; 0x156e <fputc+0x4a>
    1562:	e8 85       	ldd	r30, Y+8	; 0x08
    1564:	f9 85       	ldd	r31, Y+9	; 0x09
    1566:	81 2f       	mov	r24, r17
    1568:	19 95       	eicall
    156a:	89 2b       	or	r24, r25
    156c:	29 f7       	brne	.-54     	; 0x1538 <fputc+0x14>
    156e:	2e 81       	ldd	r18, Y+6	; 0x06
    1570:	3f 81       	ldd	r19, Y+7	; 0x07
    1572:	2f 5f       	subi	r18, 0xFF	; 255
    1574:	3f 4f       	sbci	r19, 0xFF	; 255
    1576:	3f 83       	std	Y+7, r19	; 0x07
    1578:	2e 83       	std	Y+6, r18	; 0x06
    157a:	81 2f       	mov	r24, r17
    157c:	90 2f       	mov	r25, r16
    157e:	df 91       	pop	r29
    1580:	cf 91       	pop	r28
    1582:	1f 91       	pop	r17
    1584:	0f 91       	pop	r16
    1586:	08 95       	ret

00001588 <__ultoa_invert>:
    1588:	fa 01       	movw	r30, r20
    158a:	aa 27       	eor	r26, r26
    158c:	28 30       	cpi	r18, 0x08	; 8
    158e:	51 f1       	breq	.+84     	; 0x15e4 <__ultoa_invert+0x5c>
    1590:	20 31       	cpi	r18, 0x10	; 16
    1592:	81 f1       	breq	.+96     	; 0x15f4 <__ultoa_invert+0x6c>
    1594:	e8 94       	clt
    1596:	6f 93       	push	r22
    1598:	6e 7f       	andi	r22, 0xFE	; 254
    159a:	6e 5f       	subi	r22, 0xFE	; 254
    159c:	7f 4f       	sbci	r23, 0xFF	; 255
    159e:	8f 4f       	sbci	r24, 0xFF	; 255
    15a0:	9f 4f       	sbci	r25, 0xFF	; 255
    15a2:	af 4f       	sbci	r26, 0xFF	; 255
    15a4:	b1 e0       	ldi	r27, 0x01	; 1
    15a6:	3e d0       	rcall	.+124    	; 0x1624 <__ultoa_invert+0x9c>
    15a8:	b4 e0       	ldi	r27, 0x04	; 4
    15aa:	3c d0       	rcall	.+120    	; 0x1624 <__ultoa_invert+0x9c>
    15ac:	67 0f       	add	r22, r23
    15ae:	78 1f       	adc	r23, r24
    15b0:	89 1f       	adc	r24, r25
    15b2:	9a 1f       	adc	r25, r26
    15b4:	a1 1d       	adc	r26, r1
    15b6:	68 0f       	add	r22, r24
    15b8:	79 1f       	adc	r23, r25
    15ba:	8a 1f       	adc	r24, r26
    15bc:	91 1d       	adc	r25, r1
    15be:	a1 1d       	adc	r26, r1
    15c0:	6a 0f       	add	r22, r26
    15c2:	71 1d       	adc	r23, r1
    15c4:	81 1d       	adc	r24, r1
    15c6:	91 1d       	adc	r25, r1
    15c8:	a1 1d       	adc	r26, r1
    15ca:	20 d0       	rcall	.+64     	; 0x160c <__ultoa_invert+0x84>
    15cc:	09 f4       	brne	.+2      	; 0x15d0 <__ultoa_invert+0x48>
    15ce:	68 94       	set
    15d0:	3f 91       	pop	r19
    15d2:	2a e0       	ldi	r18, 0x0A	; 10
    15d4:	26 9f       	mul	r18, r22
    15d6:	11 24       	eor	r1, r1
    15d8:	30 19       	sub	r19, r0
    15da:	30 5d       	subi	r19, 0xD0	; 208
    15dc:	31 93       	st	Z+, r19
    15de:	de f6       	brtc	.-74     	; 0x1596 <__ultoa_invert+0xe>
    15e0:	cf 01       	movw	r24, r30
    15e2:	08 95       	ret
    15e4:	46 2f       	mov	r20, r22
    15e6:	47 70       	andi	r20, 0x07	; 7
    15e8:	40 5d       	subi	r20, 0xD0	; 208
    15ea:	41 93       	st	Z+, r20
    15ec:	b3 e0       	ldi	r27, 0x03	; 3
    15ee:	0f d0       	rcall	.+30     	; 0x160e <__ultoa_invert+0x86>
    15f0:	c9 f7       	brne	.-14     	; 0x15e4 <__ultoa_invert+0x5c>
    15f2:	f6 cf       	rjmp	.-20     	; 0x15e0 <__ultoa_invert+0x58>
    15f4:	46 2f       	mov	r20, r22
    15f6:	4f 70       	andi	r20, 0x0F	; 15
    15f8:	40 5d       	subi	r20, 0xD0	; 208
    15fa:	4a 33       	cpi	r20, 0x3A	; 58
    15fc:	18 f0       	brcs	.+6      	; 0x1604 <__ultoa_invert+0x7c>
    15fe:	49 5d       	subi	r20, 0xD9	; 217
    1600:	31 fd       	sbrc	r19, 1
    1602:	40 52       	subi	r20, 0x20	; 32
    1604:	41 93       	st	Z+, r20
    1606:	02 d0       	rcall	.+4      	; 0x160c <__ultoa_invert+0x84>
    1608:	a9 f7       	brne	.-22     	; 0x15f4 <__ultoa_invert+0x6c>
    160a:	ea cf       	rjmp	.-44     	; 0x15e0 <__ultoa_invert+0x58>
    160c:	b4 e0       	ldi	r27, 0x04	; 4
    160e:	a6 95       	lsr	r26
    1610:	97 95       	ror	r25
    1612:	87 95       	ror	r24
    1614:	77 95       	ror	r23
    1616:	67 95       	ror	r22
    1618:	ba 95       	dec	r27
    161a:	c9 f7       	brne	.-14     	; 0x160e <__ultoa_invert+0x86>
    161c:	00 97       	sbiw	r24, 0x00	; 0
    161e:	61 05       	cpc	r22, r1
    1620:	71 05       	cpc	r23, r1
    1622:	08 95       	ret
    1624:	9b 01       	movw	r18, r22
    1626:	ac 01       	movw	r20, r24
    1628:	0a 2e       	mov	r0, r26
    162a:	06 94       	lsr	r0
    162c:	57 95       	ror	r21
    162e:	47 95       	ror	r20
    1630:	37 95       	ror	r19
    1632:	27 95       	ror	r18
    1634:	ba 95       	dec	r27
    1636:	c9 f7       	brne	.-14     	; 0x162a <__ultoa_invert+0xa2>
    1638:	62 0f       	add	r22, r18
    163a:	73 1f       	adc	r23, r19
    163c:	84 1f       	adc	r24, r20
    163e:	95 1f       	adc	r25, r21
    1640:	a0 1d       	adc	r26, r0
    1642:	08 95       	ret

00001644 <_exit>:
    1644:	f8 94       	cli

00001646 <__stop_program>:
    1646:	ff cf       	rjmp	.-2      	; 0x1646 <__stop_program>
